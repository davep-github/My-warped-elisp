#!/usr/bin/env bash
# $XFree86: mit/clients/xinit/xinitrc.cpp,v 1.3 1993/04/11 13:50:35 dawes Exp $
# $XConsortium: xinitrc.cpp,v 1.4 91/08/22 11:41:34 rws Exp $
set -x

echo "xinitrc: ********** Running $(realpath $0) **************"

XDIR=/usr/X11R6
ARGWM=$1
XRCDIR=$2
SESS_TYPE=$3
[ "$XRCDIR" = "" ] && XRCDIR=`dirname $0`

x=`typeset -f`

[ -z "$x" ] && . $HOME/.bashrc	# this will trash $* is it runs

#
# determine desktop environment
[ -z "$DTE" ] && ! DTE=`host-info.py DTE` && {
    case "$SESS_TYPE" in
	kdm|kde)
	    DTE=kde;
	    # ??? kde startup stuff complains about no DISPLAY being set.
	    export DISPLAY=:0.0;;

	gnome)
	    DTE=gnome;;

	*)
	    DTE=none
    esac
}

export envDTE=$DTE

WMD=`host-info.py window_manager`
WM=${WM:-$ARGWM}
WM=${WM:-$WMD}
WM=${WM:-"sawfish"}
case "$WM" in
    a) WM=afterstep
	;;
    f) WM=fvwm2
	;;
    s) WM=sawfish
	;;
    [kc]) WM=dp-compiz-manager
	;;
    m) WM=dp-metisse-wm
	;;
esac
export WM
export KDEWM=$WM

family=`host-info.py family`
wm_args=
case $WM in
    fvwm2)
	local_rc=$XRCDIR/fvwm2.local.rc
	echo "# Generated by .xinitrc" > $local_rc
	for rc in $WM.$family $WM.$HOST
	do
	    rcf=$XRCDIR/$rc.rc
	    [ -f $rcf ] && echo "Read $rcf Quiet" >> $local_rc
	done
	;;
esac

if [ x"$XWINHOME" != x ]; then
    XINIT_DIR=$XWINHOME/lib/X11/xinit
else
    XINIT_DIR=$XDIR/lib/X11/xinit
fi
sysresources=$XINIT_DIR/.Xresources
sysmodmap=$XINIT_DIR/.Xmodmap

# merge in defaults and keymaps

if [ -f $sysresources ]; then
    xrdb -override $sysresources
fi

if [ -f $sysmodmap ]; then
    xmodmap $sysmodmap
fi

userresources=`expand_source_list $XRCDIR/Xresources "" $locale_rcs`
for resFile in $userresources
do
    if [ -f $resFile ]; then
	xrdb -override $resFile
    fi
done

usermodmaps=`expand_source_list $XRCDIR/Xmodmap "" $locale_rcs`
for usermodmap in $usermodmaps
do
    if [ -f $usermodmap ]; then
	xmodmap $usermodmap
    fi
done

killprog esd			# in case we ran gnome earlier
while findprog esd
do
    echo "wait for esd to die"
    sleep 1
done

#
# tell the world we support the XFT (antialiasing) extension
export QT_XFT=1
export KDEDIR=/usr/kde

case "$DTE" in
    kdm|kde)
	# sigh... if our apps start up too early, kde doesn't know
	# about them and the "show desktop" function doesn't
	# control them properly.
	# ?Why here and so convolutedly?
	# Ah-ha!  We brilliantly do this after doing some other useful
	# work to give kde time to start instead of waiting right after
	# we use startkde.
	# And, startkde doesn't run in the background, so we run this in
	# the background and it waits for the foreground kde to start up.
	(
	    # waits in the background for kde to start up.
	    waitfor-kde; 
            eko 1>&2 "extensions passed to source list '' $locale_rcs .$WM"
	    ##source_list $XRCDIR/Xclients "" $locale_rcs .$WM
            # The Kclients script can call the Xclients script(s) if it 
	    # wants to.
	    source_list $XRCDIR/Kclients "" $locale_rcs .$WM
	) >> ~/log/X11/xlog.davep.waitfor-kde 2>&1 &
	;;
    *)
	case $WM in
	    # Wait for wm, otherwise it don't manage them.
	    # Doesn't seem to work... looks like they need to be started
	    # from a window started by the WM, or after it's been up longer,
	    # or some other threshold is crossed.
	    dp-metisse-wm)
		(
		    # metisse-start-fvwm is a script and waitfor-prog doesn't
		    # yet know how to handle interpreted programs.
                    # But it eventually starts up fvwmi and fvwm-insitu
		    waitfor-prog Xmetisse fvwmi FvwmCompositor
		    #sleep 3 # Hackiest of hacks :-(
		
		    eko 1>&2 "extensions passed to source list '' \
			$locale_rcs .$WM"
		    # this returns the number of files actually sourced
		    source_list $XRCDIR/Xclients "" $locale_rcs .$WM
		    if [ "$?" -lt "1" ]
		    then
			# fire up a shell if nothing else was done
			xterm -geometry 80x24+10+10 -ls &
		    fi
		    ) & # >> ~/log/X11/xlog.davep.waitfor-metisse 2>&1 &
		;;
	esac
	;;
esac


# button setting is for evoluent vertical mouse.	
# see :(dpj-chase-link "daily-2003-10.jxt" 6562 "2003-10-09T17:15:30"):
#lsusb -v | fgrep -q Evoluent && ! findprog imwheel \
#    && imwheel --buttons 67005
# The above was meant to work with FreeBSD and its moused.
#echo "after imwheel"

case "$DTE" in
    none)
	${WM} ${wm_args}
	rc=$?
	;;
    gnome)
	WINDOW_MANAGER=$WM gnome-session &
	rc=$?
	;;

    kdm|kde)
	[[ "$WM" == *e16* ]] && WM=$XRCDIR/Xclients.e16-kde.sh
	[[ "$WM" != "-" ]] && KDEWM=$WM
	sp ${WM}
        #also parse for 4.* and 3.* and put those in place of the 4.0 & 3.5
	#if [[ "$KV" == 4* ]]; then
	#    : ${STARTKDE:=/usr/kde/4.0/bin/startkde}
	#else
	#    : ${STARTKDE:=/usr/kde/3.5/bin/startkde}
	#fi
	STARTKDE=/usr/bin/startkde
	: ${STARTKDE_ARGS:=}
	${STARTKDE} ${STARTKDE_ARGS}
	rc=$?
	;;
esac
echo "After DTE case, DTE>$DTE<, rc: $rc."

echo "xinitrc: ********** Running $(realpath $0) **************"

