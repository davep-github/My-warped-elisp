# -*-Shell-script-*-

add_rc_text()
{
    s="${1-s:Nada}"; shift
    s2="${1-s2:Nada}"; shift

    export DP_SHELL_RCS="${DP_SHELL_RCS}..${s}${s2}"

###    export DP_SHELL_RCS="${DP_SHELL_RCS}__$(type true_p): "
}

trace_rc_file()
{
    local enter=$1; shift
    local name=$1; shift
    if $enter
    then
	s="${name}: Enter: $(date -Ins):\n"
	s2=
    else
	s="${name}: Exit: $(date -Ins):\n"
	s2=
    fi

    # export DP_SHELL_RCS="${DP_SHELL_RCS}${s}${s2}"
    add_rc_text "${s}" "${s2}"
    #echo "DP_SHELL_RCS>${DP_SHELL_RCS}<"
}

enter_rc_file()
{
    #echo 1>&2 "$1(enter): $(type true_p)"
    trace_rc_file true "$1"
}

exit_rc_file()
{
    trace_rc_file false "$1"
    #echo 1>&2 "$1(exit): $(type true_p)"

}

# @todo XXX false when *all* bugs are fixed.
: ${DP_SOURCE_FORCE_LOG_p:=true}

dp_source()
{
    local logp=
    if [[ "$1" == '-l' ]] || "${DP_SOURCE_FORCE_LOG_p}"
    then
	logfile=/tmp/dp_source.log
	[[ "$1" == '-l' ]] && shift
    else
	logfile=/tmp/dp_source.log # REMOVE this
    fi
    local src_file=$1; shift

    echo >> $logfile "dp_source: ${src_file}"
    enter_rc_file "${src_file}"
    source "${src_file}"
    exit_rc_file "${src_file}"
}
