#-*-shell-script-*-

: ${PS1_backup=PS1}
: ${PROMPT_backup=PROMPT}
setopt PROMPT_SUBST
unset PROMPT
PROMPT='${dp_NH_indicator}%B%n@%m:%~%b'
# We need to match the form of the bash prompt for emacs shell-buffer dir
# tracking.  In fact all shells should do the same.
# [ at this time: 2020-11-02T11:17:53 ] zsh and shell mode don't get along.
# zsh outputs what looks like garbage when printing the prompt.  The comint
# filter sees garbage but the shell buffer shows the expected prompt
# containing the properly formatted prompt.  However since the filter
# function doesn't see the right thing it can't track the dir.  The garbage
# doesn't look like the raw prompt, but it could be some "compiled" form.
PROMPT+=' $(git_prompt_info)'
PROMPT+="
%F{cyan}(zsh) %!%(0?||<%S%?%s)>%f "

ZSH_THEME_GIT_PROMPT_PREFIX="%{$fg_bold[white]%}(%{$fg[white]%}"
ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%} "
ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[white]%})%{$fg[red]%}"
# @todo XXX Change the dirty indicator back to only one unicode character if
# we can determine unicode support.  lxterm(1) claims to do that and use the
# proper terminal, but doesn't.
# If we can tell the difference twixt ASCII vs unicode, then we can choose
# what to use for dirty, and other special states.
ZSH_THEME_GIT_PROMPT_DIRTY+="*âœ—*"
ZSH_THEME_GIT_PROMPT_CLEAN="%{$fg[white]%})"
