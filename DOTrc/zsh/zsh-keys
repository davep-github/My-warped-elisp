#!/usr/bin/env zsh

# echo 1>&2 "zsh-keys: DP_ZSH_ENVIRONMENT_FUCKED>$DP_ZSH_ENVIRONMENT_FUCKED<"
# echo 1>&2 "zsh-keys: DP_ZSH_FIX_FUCKED_ENVIRONMENT>$DP_ZSH_FIX_FUCKED_ENVIRONMENT<"

# This is beginning as something to give me my preferences in an x-like-term,
# in this case lxterminal.

# NB: In zsh, try asking for a `quoted-insert' (^V) to get the key that
# zsh will use. E.g. ^V<up-arrow> shows \eOA, but if I type into hexdump, od,
# etc, up-arrow gives me \e[A.  Which confused me for a while.  Hence this
# note to my poor, sad future self.
# The `quoted-insert' value returned can be used as an argument to bindkey.
bindkey '^p' history-beginning-search-backward
bindkey '^n' history-beginning-search-forward
bindkey "\eOA" up-line-or-history
bindkey "\eOB" down-line-or-history
bindkey -M menuselect '^o' accept-and-infer-next-history
bindkey "^[OM" accept-line # <Enter> on keypad
bindkey "^H" backward-delete-word
bindkey "^[^?" delete-word 

# from my old ~/.inputrc used with bash.
# @todo XXX This may be read by zsh.  Fix that is so.  We don't want to
# remove .inputrc since it's a readline file, not bash.
# These are the middle keys from a 102 key kb.
# They are all predefined.
#"\e[1~":beginning-of-line
#"\e[4~":end-of-line
#"\e[3~":delete-char
#DEL: backward-delete-char
