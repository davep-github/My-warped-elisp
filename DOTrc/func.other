# -*-Shell-script-*-

qsubrc()
{
    : ${inherited_dpxx_bg=linen}
    export inherited_dpxx_bg

    : ${inherited_dpxx_fg=black}
    export inherited_dpxx_fg

    ignoreeof=10
}

##
## This can, and should, be genericized.
##
me_dogo_op()
{
    local op="${1}"; shift
    local dest

    case "$@" in 
        -*)
            go-mgr "$@"
        ;;
        back) dest="${GoBack}"
              export GoBack="${PWD}"
              "${op}" "${dest}"
              ;;
        *)
            [ -z "$*" ] && dest="tot"
            local dest=$(me-expand-dest "$@")
            [ "$?" != 0 ] || ! vsetp "${dest}" && {
                echo "me_dogo_op(): Cannot find>$@<"
                return 1
            } 1>&2
            shift
            #[ -n "$*" ] && dest="${dest}/$@"
            dest=$(normpath "${dest}")
            local oldPWD=$PWD;
            "${op}" "${dest}" && export GoBack="${oldPWD}"
        ;;
    esac
}
DP_EXPORT_FUNC me_dogo_op

mego() 
{
    me_dogo_op pushd "$@"
}
DP_EXPORT_FUNC mego

mecd() 
{
    me_dogo_op cd "$@"

}
DP_EXPORT_FUNC mecd

tgen_go_latest_run()
{
    mecd testgen
    cd $(tgen-latest-run "$@")
}
DP_EXPORT_FUNC tgen_go_latest_run

xx()
{
    xterm_sized  "$@" -e tcsh -l &
}
alias xh="xterm_sized -fg black -bg white &"
alias xs="nohup xterm_sized & ; exit"
xn()
{
    xterm_sized -title "$@"
}
xxd()
{
    DISPLAY="$@" xx ; sleep 2 ; exit
}

go_or_cdtglr()
{
    local op="${1}"
    shift

    local show_p
    [ "${1-}" = "-o" ] && {
        show_p=t
        shift
    }
    local d
    d=$(tgen-latest-run "$@") || {
        local rc=$?
        echo "tgen-latest-run $@ failed, rc: $rc"
        return 1
    }
    vsetp "${d}" &&
    {
        echo "${d}"
        if vsetp "${show_p}"
        then
            # echo "${d}"
            :
        else
            "${op}" "${d}"
        fi
    }
}

cdtglr()
{
    go_or_cdtglr cd "$@"
}

gtglr()
{
    go_or_cdtglr g "$@"
}

nvgrep()
{
    local bin=$(sp -1 nvgrep)
    cd $(me-expand-dest tot)
    "${bin}" "$@"
}
true
