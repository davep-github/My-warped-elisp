# -*-Shell-script-*-

if [ -n "${DP_DEBUG_STARTUP}" ]
then
    set -x
elif [ -n "${DP_NODEBUG_STARTUP}" ]
then
    set +x
fi

dp_log_header()
{
    echo -n "$(date +'%j:%R:%S')"
}

dp_rc_logger()
{
    {
	dp_log_header
	echo ": $@"
    } >> "${DAVEP_rc_log-$HOME/var/log/fuck-my-rc-system}"
}
DP_EXPORT_FUNC dp_rc_logger
dp_rc_logger "================= $(date): begin $0 ================="

function dp_LOGGER()
{
    local logname="$1"
    shift
    local prefix="$1[$(~/bin/dp-std-timestamp):func.early]"
    shift
    echo "$prefix: $0: $@" >> "$logname"
}

vsetp()
{
    [ -n "$*" ]
}

vunsetp()
{
    [ -z "$*" ]
}
DP_EXPORT_FUNC vsetp vunsetp

DP_TRUTH_VAL=t                  # Preferred
#echo defining true_p 1>&2
#add_rc_text 'defining true_p'
true_p()
{
    case "${1-}" in
        [tTyY1]|true|yes) return 0;;
        *) return 1
    esac
    return 1
}
#add_rc_text 'defined true_p'
DP_EXPORT_FUNC true_p
#echo "$DP_EXPORT_FUNC true_p" 1>&2
#echo defined true_p 1>&2

false_p()
{
    ! true_p "$@"
}
DP_EXPORT_FUNC false_p

tf_name()
{
    if true_p "$@"
    then
        echo true
    else
        echo false
    fi
}
DP_EXPORT_FUNC tf_name

tfnot_name()
{
    if true_p "$@"
    then
        echo false
    else
        echo true
    fi
}
DP_EXPORT_FUNC tfnot_name

source ${DP_RC_DIR}/echo_id

DP_EXPORT_FUNC echo_id echo_id_err echo_id2 echo_id_ornate
DP_EXPORT_FUNC eko_id eko_id_err eko_id2

#set +x

true
