# Support for mounting various home resources over sshfs.

# Mount points.
# Many needed due to the fact that symbolic links are expanded as they would
# be on the local host, vs being relative to the sshfs mount point.
# VILYA_SSHFS* dirs are here, VILYA_<non-SSHFS>* are on vilya
: ${VILYA_SSHFS_MOUNT_POINT:=$HOME/vilya}
export VILYA_SSHFS_MOUNT_POINT
: ${VILYA_SSHFS_DAVEP_ROOT:=$VILYA_SSHFS_MOUNT_POINT/davep}
export VILYA_SSHFS_DAVEP_ROOT
: ${VILYA_SSHFS_MY_SVN_WORLD:=$VILYA_SSHFS_MOUNT_POINT/my-svn-world}
export VILYA_SSHFS_MY_SVN_WORLD
: ${SVN_VILYA_MY_WORLD:=/mnt/reiser/var/svn/my-world}
export SVN_VILYA_MY_WORLD
: ${VILYA_MY_SVN_WORLD:=$SVN_VILYA_MY_WORLD}
export VILYA_MY_SVN_WORLD
: ${VILYA_SSHFS_MVSIK:=$VILYA_SSHFS_MOUNT_POINT/mvsik}
export VILYA_SSHFS_MVSIK
: ${VILYA_SSHFS_MP3:=$VILYA_SSHFS_MVSIK/mp3}
export VILYA_SSHFS_MP3
: ${VILYA_SSHFS_FLAC:=$VILYA_SSHFS_MVSIK/flac}
export VILYA_SSHFS_FLAC
: ${MVSIK_DIRS:=}

dp_vilya_resolve_link()
{
    for l in "$@"; do
        ssh $VILYA readlink -f "$l"
    done
}
export -f dp_vilya_resolve_link

# Find my-svn-world
dp_get_vilya_my_svn_world()
{
    dp_vilya_resolve_link '$HOME/yokel/svn/my-world'
}
export -f dp_get_vilya_my_svn_world

dp_set_vilya_my_svn_world()
{
    export VILYA_MY_SVN_WORLD=$(dp_get_vilya_my_svn_world)
}
export -f dp_set_vilya_my_svn_world

mount_my_svn_world()
{
    (
        if dp_set_vilya_my_svn_world; then
            sshfs $VILYA:$VILYA_MY_SVN_WORLD $VILYA_SSHFS_MY_SVN_WORLD
        else
            echo 1>&2 "Could not find .../svn/my-world on vilya."
        fi
    )
}
export -f mount_my_svn_world

dp_get_vilya_mp3()
{
    dp_vilya_resolve_link '/media/audio/mvsik/mp3'
}

dp_mount_vilya_mp3()
{
    sshfs ${VILYA}:$(dp_get_vilya_mp3) ${VILYA_SSHFS_MP3}
}
export -f dp_mount_vilya_mp3
MVSIK_DIR_MOUNTERS="${MVSIK_DIR_MOUNTERS} dp_mount_vilya_mp3"

dp_get_vilya_flac()
{
    dp_vilya_resolve_link '/media/audio/mvsik/flac'
}
dp_mount_vilya_flac()
{
    sshfs ${VILYA}:$(dp_get_vilya_flac) ${VILYA_SSHFS_FLAC}
}
export -f dp_mount_vilya_flac
MVSIK_DIR_MOUNTERS="${MVSIK_DIR_MOUNTERS} dp_mount_vilya_flac"


dp_mount_vilya_mvsik_dirs()
{
    for mounter in ${MVSIK_DIR_MOUNTERS}
    do
      $mounter || {
          echo "Mounter [$mounter] failed."
          return 1
      } 1>&2
    done
}

true
