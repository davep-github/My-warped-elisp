(syscalls (regex corelib start mlink paths high-scheme tables mathlib iolib objsys low-scheme *scheme* primops precore) (make-fd-open-mode set-file-descriptor! $portable-sockopt-options day->time time->epoch-seconds inet-server fd-stat buffer gethostbyname time>? set-spec! time<? open-input-fd stat-owner stat-access? unlink get-socket-option <inet-addr> stat-file? symlink send-to <invalid-mode-spec> stat-type local-socket-option file-truncate interval->seconds time+interval stat-id-vector define-syscall-glue fd-close clock <socket-addr> socket-type->integer fd-dup2 setsockopt-linger set-query! socket-listen connect/inet <fd-select-set> interval>? string->inet-addr <resolver-error> local-socket-level time>=? socket-accept chown seconds->interval time<=? query fd-select time=? inet-socket-addr-parts stat-directory? inet-client socket-bind/inet socket-connect/inet rename getsockopt %profile-parse-next fd-open interval-interval stat-mtime rmdir negative-interval clock-thunk inet-socket-hostname lstat make-inet-socket-addr stat-id->hash interval->string open-output-fd time-again! scandir errno inexact->time interval>=? access-mask socket-bind/unix setsockopt-time epoch-seconds->time <fd-input-port> time->string interval=? <inet-socket-addr> rfc1413-response-parser time-time stat-times do-sockopt inet-addr->string socket-address-family->integer getpeername/inet with-profile-trace set-error-code! recv-from fd-read fd-truncate exact->time <unix-socket-addr> fd-lseek link parse-rfc1413-response fd-dup setsockopt-int <stat-buf> stat getsockname/inet file-descriptor remote-port-owner file-access? chmod stat-eq? $portable-sockopt-levels with-profile-trace** error-code time interval+interval get-sock-or-peer-name <time> stat-mode time->calendar stat-size socket-create spec mode-list->bits set-buffer! with-profile-trace* interval<=? make-fd-set fd-write gethostbyaddr string->hostaddr set-socket-option interval<? gethostinfo <interval> scmtime-cmp time-thunk <fd-output-port>) (("packages/syscalls/time.scm" class <time> ()) ("packages/syscalls/time.scm" class <interval> ()) ("packages/syscalls/time.scm" function epoch-seconds->time ()) ("packages/syscalls/time.scm" method write-object ()) ("packages/syscalls/time.scm" method display-object ()) ("packages/syscalls/time.scm" method write-object ()) ("packages/syscalls/time.scm" method display-object ()) ("packages/syscalls/time.scm" function time<? ()) ("packages/syscalls/time.scm" function time<=? ()) ("packages/syscalls/time.scm" function time=? ()) ("packages/syscalls/time.scm" function time>=? ()) ("packages/syscalls/time.scm" function time>? ()) ("packages/syscalls/time.scm" function interval<? ()) ("packages/syscalls/time.scm" function interval<=? ()) ("packages/syscalls/time.scm" function interval=? ()) ("packages/syscalls/time.scm" function interval>=? ()) ("packages/syscalls/time.scm" function interval>? ()) ("packages/syscalls/time.scm" function clock-thunk ()) ("packages/syscalls/time.scm" function time-thunk ()) ("packages/syscalls/sockaddr.scm" class <inet-addr> ()) ("packages/syscalls/sockaddr.scm" class <socket-addr> ()) ("packages/syscalls/sockaddr.scm" class <unix-socket-addr> ()) ("packages/syscalls/sockaddr.scm" class <inet-socket-addr> ()) ("packages/syscalls/sockaddr.scm" method to-string ()) ("packages/syscalls/sockaddr.scm" method to-string ()) ("packages/syscalls/sockaddr.scm" method to-string ()) ("packages/syscalls/sockaddr.scm" function inet-socket-hostname ()) ("packages/syscalls/hostname.scm" class <resolver-error> ()) ("packages/syscalls/hostname.scm" function gethostbyname ()) ("packages/syscalls/hostname.scm" function gethostbyaddr ()) ("packages/syscalls/hostname.scm" function string->hostaddr ()) ("packages/syscalls/hostname.scm" method display-object ()) ("packages/syscalls/stat.scm" class <stat-buf> ()) ("packages/syscalls/stat.scm" syntax access-mask ()) ("packages/syscalls/stat.scm" function stat-directory? ()) ("packages/syscalls/stat.scm" function stat-file? ()) ("packages/syscalls/stat.scm" function stat-access? ()) ("packages/syscalls/sockets.scm" function getsockname/inet ()) ("packages/syscalls/sockets.scm" function getpeername/inet ()) ("packages/syscalls/sockets.scm" function socket-connect/inet ()) ("packages/syscalls/sockets.scm" class <fd-select-set> ()) ("packages/syscalls/sockets.scm" glue make-fd-set ((type function))) ("packages/syscalls/sockets.scm" function inet-server ()) ("packages/syscalls/sockets.scm" function inet-client ()) ("packages/syscalls/files.scm" function make-fd-open-mode ()) ("packages/syscalls/files.scm" class <invalid-mode-spec> ()) ("packages/syscalls/files.scm" method display-object ()) ("packages/syscalls/fdport.scm" class <fd-output-port> ()) ("packages/syscalls/fdport.scm" method output-port-write-char ()) ("packages/syscalls/fdport.scm" method write-string ()) ("packages/syscalls/fdport.scm" method close-output-port ()) ("packages/syscalls/fdport.scm" method flush-output-port ()) ("packages/syscalls/fdport.scm" function open-output-fd ()) ("packages/syscalls/fdport.scm" class <fd-input-port> ()) ("packages/syscalls/fdport.scm" method initialize ()) ("packages/syscalls/fdport.scm" method provide-more-input ()) ("packages/syscalls/fdport.scm" function open-input-fd ()) ("packages/syscalls/sockopt.scm" variable $portable-sockopt-options ()) ("packages/syscalls/sockopt.scm" variable $portable-sockopt-levels ()) ("packages/syscalls/sockopt.scm" function do-sockopt ()) ("packages/syscalls/sockopt.scm" function set-socket-option ()) ("packages/syscalls/sockopt.scm" function get-socket-option ()) ("packages/syscalls/scanprof.scm" function with-profile-trace ()) ("packages/syscalls/scanprof.scm" function with-profile-trace* ()) ("packages/syscalls/scanprof.scm" function with-profile-trace** ()) ("packages/syscalls/scanprof.scm" glue %profile-parse-next ((type function))) ("packages/syscalls/ident.scm" variable rfc1413-response-parser ()) ("packages/syscalls/ident.scm" function parse-rfc1413-response ()) ("packages/syscalls/ident.scm" function remote-port-owner ())))