%!PS-Adobe-1.0
%%CreationDate: 7/30/01 14:36:36
%%Creator: Generated by pcal v4.7
%%For: davep
%%Routing: David A. Panariti
%%Title: calendar for 10/01 (from /home/davep/etc/.calendar)
%%Orientation: Landscape
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentPaperSizes: Letter
%%ProofMode: NotifyMe
%%EndComments

statusdict /lettertray known { statusdict begin lettertray end } if
/small 1 def
/medium -1 def
/large 0 def
/titlefont /Times-Bold def
/datefont /Times-Bold def
/notesfont /Helvetica-Narrow def
/weekdayfont titlefont def
/footfont titlefont def
/headingfont titlefont def
/datemargin [ 4 10 ] def
/gridlinewidth [ 1.0 2.5 ] def
/titlefontsize [ 48 60 ] def
/datefontsize [ 25 60 ] def
/weekdayfontsize 12 def
/footfontsize 12 def
/notesfontsize 7 def
/headingfontsize 12 def
/FontFind { findfont exch scalefont } def
/FF 0 def
/HF 0 def
/hf_large { headingfontsize headingfont FontFind } def
/TF 1 def
/tf_large { titlefontsize large get titlefont FontFind } def
/tf_small { titlefontsize small get titlefont FontFind } def
/DF 3 def
/df_large { datefontsize large get datefont FontFind } def
/df_small { datefontsize small get datefont FontFind } def
/NF 5 def
/nf_large { notesfontsize notesfont FontFind } def
/WF 6 def
/wf_large { weekdayfontsize weekdayfont FontFind } def
/allfonts [
	hf_large tf_large tf_small df_large df_small nf_large wf_large 
] def
/month_names [
	(January) (February) (March) (April) (May) (June)
	(July) (August) (September) (October) (November) (December) ] def
/day_names [
	(Sunday) (Monday) (Tuesday) (Wednesday) (Thursday) (Friday)
	(Saturday) ] def
/linesep (\056p) def
/boldfont (\056b) def
/italicfont (\056i) def
/romanfont (\056r) def
/pagewidth 612 def
/pageheight 792 def
/rval 90 def
/xsval 1.000 def
/ysval 1.000 def
/xtval 46 def
/ytval -85 def
/ytop 85 def
/daywidth 100 def
/dayheight 80 def
/draw-moons true def
/julian-dates false def
/fill-boxes true def
/prev_small_cal 40 def
/next_small_cal 41 def
/dategray 0.800 def
/fillgray 0.950 def
/Y0 0 def
/gridwidth daywidth 7 mul def
/gridheight dayheight 6 mul def
/negdaywidth daywidth neg def
/negdayheight dayheight neg def
/neggridwidth gridwidth neg def
/neggridheight gridheight neg def
/textmargin 2 def
/notemargin 4 def
/charlinewidth 0.1 def
/datewidth 2 array def
/moonlinewidth 0.1 def
/radius 6 def
/halfperiod 0.5 def
/quartperiod 0.25 def
/offset radius datemargin 0 get add def
/rect radius 2 sqrt mul quartperiod div def
/ROMAN 0 def
/BOLD 1 def
/ITALIC 2 def
/currfonttype ROMAN def
/boldoffset 0.5 def
/italicangle 12 def
/italicmatrix
[notesfontsize 0 notesfontsize italicangle dup sin exch cos div mul
notesfontsize 0 0] def
/hangingindent (   ) def
statusdict (duplexmode) known { statusdict begin false setduplexmode end } if
/FontSet {
allfonts exch
userdict /CurrentFontSet 2 index put
get setfont
} bind def
/TitleFontSet {TF add FontSet} bind def
/DateFontSet {DF add FontSet} bind def
/WeekdayFontSet {WF FontSet} bind def
/FootFontSet {FF FontSet} bind def
/NotesFontSet {NF FontSet /currfonttype ROMAN def} bind def
/HeadingFontSet {HF FontSet} bind def
/center {
1 index stringwidth pop sub 2 div 0 rmoveto show
} bind def
/strcat {
2 copy
length exch length
dup 3 -1 roll add
string
dup 0 6 -1 roll putinterval
dup 3 -1 roll 4 -1 roll putinterval
} bind def
/nextbox {
day startbox add 7 mod 0 eq
{ neggridwidth daywidth add negdayheight rmoveto }
{ daywidth 0 rmoveto }
ifelse
} bind def
/boxpos {
dup 7 mod daywidth mul
exch 7 idiv negdayheight mul Y0 add
} bind def
/datepos {
startbox add 1 sub dup 7 mod daywidth mul
exch 7 idiv negdayheight mul Y0 add
} bind def
/drawtitle {
/fontsize titlefontsize calsize get def
calsize TitleFontSet
/month_name month_names month 1 sub get def
/yearstring year 10 string cvs def
0 Y0 fontsize 0.25 mul add
calsize small eq { 4 } { weekdayfontsize } ifelse
1.15 mul add moveto
month_name (  ) strcat yearstring strcat gridwidth center
} bind def
/drawdaynames {
WeekdayFontSet
0 1 6 {
/i exch def
i daywidth mul Y0 weekdayfontsize 0.4 mul add moveto
day_names i get
daywidth center
} for
} bind def
/drawgrid {
gridlinewidth calsize get setlinewidth
1 1 6 {
daywidth mul Y0 moveto
0 neggridheight rlineto
stroke
} for
1 1 5 {
0 exch negdayheight mul Y0 add moveto
gridwidth 0 rlineto
stroke
} for
newpath
0 Y0 moveto
gridwidth 0 rlineto
0 neggridheight rlineto
neggridwidth 0 rlineto
closepath
stroke
} bind def
/drawnums {
/fontsize datefontsize calsize get def
/margin datemargin calsize get def
calsize DateFontSet
charlinewidth setlinewidth
1 datepos fontsize 0.75 mul margin add sub exch margin add exch moveto
calsize large eq {
datewidth 0 (2) stringwidth pop margin 2 mul add put
datewidth 1 (22) stringwidth pop margin 2 mul add put
} if
calsize small eq {
/color 0 def
1 1 ndays {
/day exch def
prtday
nextbox
} for
} {
1 1 ndays {
/day exch def
/color date_color day get def
prtday
nextbox
} for
} ifelse
} bind def
/startpage {
rval rotate
xsval ysval scale
xtval ytval translate
} bind def
/calendar {
drawtitle
calsize small ne { drawdaynames } if
calsize large eq { footstrings } if
drawnums
calsize large eq
julian-dates false ne and { drawjnums } if
fill-boxes { drawfill } if
drawgrid
calsize large eq
draw-moons false ne and { drawmoons } if
0 0 moveto
} bind def
/prtday {			% ps_prtday_bw
gsave
day 3 string cvs
[
{ show }
{ dategray setgray show }
{ true charpath stroke }
{ true charpath gsave
dategray setgray fill
grestore stroke }
] color get exec
grestore
} bind def
/setfill {			% ps_setfill_bw
fillgray setgray
} def
/footstrings {} bind def			% ps_nofooter
/fillboxes {			% ps_fill
/last exch def
/first exch def
first 1 last {
/box exch def
/fillit true def
calsize large eq {
noteboxes { box eq { /fillit false def } if } forall
box prev_small_cal eq box next_small_cal eq or {
/fillit false def
} if
} if
fillit {
box boxpos moveto
gsave
setfill
daywidth 0 rlineto
0 negdayheight rlineto
negdaywidth 0 rlineto
closepath fill
grestore
} if
} for
} bind def
/drawfill {
0 startbox 1 sub fillboxes
startbox ndays add 41 fillboxes
} bind def
/drawjnums {} bind def			% ps_nojulians
/domoon {			% ps_moons
/phase exch def
gsave
currentpoint translate
newpath
phase halfperiod .01 sub ge phase halfperiod .01 add le and {
0 0 radius
0 360 arc stroke
}
{
0 0 radius
0 0 radius
phase halfperiod lt {
270 90 arc stroke
0 radius neg moveto
270 90 arcn
}
{
90 270 arc stroke
0 radius neg moveto
270 90 arc
/phase phase halfperiod sub def
} ifelse
/x1 quartperiod phase sub rect mul def
/y1 x1 abs 2 sqrt div def
x1
y1
x1
y1 neg
0
radius neg
curveto
fill
} ifelse
grestore
} bind def
/do-moon-p {
draw-moons (some) eq {
/p false def
quarter_moons { day eq { /p true def } if } forall
p
}
{
draw-moons
} ifelse
} bind def
/drawmoons {
gsave
moonlinewidth setlinewidth
1 datepos offset sub exch daywidth add offset sub exch moveto
/n 0 def
1 1 ndays {
/day exch def
do-moon-p {
moon_phases n get domoon
/n n 1 add def
} if
nextbox
} for
grestore
} bind def
/daytext {			% ps_text
/mytext exch def /day exch def
NotesFontSet
day datepos datefontsize large get 0.75 mul datemargin large get
2 mul add notesfontsize 0.75 mul add sub dup
/ypos exch def exch textmargin add exch moveto
currentpoint pop /LM exch def
/RM LM daywidth textmargin 2 mul sub add def
showtext
} bind def
/holidaytext {
/mytext exch def /day exch def
/datesize datefontsize large get def
/margin datemargin large get def
/dwidth datewidth day 10 lt { 0 } { 1 } ifelse get def
NotesFontSet
day datepos margin notesfontsize 0.75 mul add sub dup
/ypos exch def exch dwidth add exch moveto
currentpoint pop /LM exch def
/mwidth do-moon-p {offset radius add} {0} ifelse def
/RM LM daywidth textmargin sub dwidth mwidth add sub add def
showtext
} bind def
/notetext {
/mytext exch def /box exch def
notesheading () eq {
box boxpos notemargin notesfontsize 0.75 mul add sub dup
} {
box boxpos notemargin headingfontsize 0.75 mul add sub exch
notemargin add exch moveto
HeadingFontSet
notesheading show
box boxpos notemargin headingfontsize add
notesfontsize add sub dup
} ifelse
/ypos exch def exch notemargin add exch moveto
NotesFontSet
/LM currentpoint pop def
/RM LM daywidth notemargin 2 mul sub add def
showtext
} bind def
/crlf {
ypos notesfontsize sub /ypos exch def LM ypos moveto
} bind def
/prstr {
gsave
dup stringwidth pop currentpoint pop add RM gt {
currentpoint pop LM ne {
crlf hangingindent show
} if
dup stringwidth pop RM currentpoint pop sub gt {
dup stringwidth pop RM currentpoint pop sub exch div 1
scale
} if
} if
currfonttype BOLD eq
{ dup currentpoint 2 index show exch 0.5 add exch moveto show }
{ show }
ifelse
currentpoint grestore moveto
} bind def
/showtext {
mytext {
/word exch def
/i 1 def
/n 0 def
[ linesep boldfont italicfont romanfont ] {
word eq {
/n i def
} if
/i i 1 add def
} forall
[
{ word prstr ( ) show }
{ crlf
NotesFontSet }
{ NotesFontSet
/currfonttype BOLD def }
{ /currfonttype ITALIC def
notesfont findfont italicmatrix makefont setfont }
{ NotesFontSet }
] n get exec
} forall
} bind def
/printmonth {			% ps_month
/calsize large def
startpage
calendar
printsmallcals
} bind def
/scscale .138 def
/scoffset gridwidth gridwidth scscale 7 mul mul sub 2.0 div def
/printsmallcals {
/calsize small def
/sv_startbox startbox def
prev_small_cal 0 ge {
/year p_year def
/month p_month def
/startbox p_startbox def
/ndays p_ndays def
gsave
prev_small_cal boxpos translate
scscale dup scale
scoffset ytop neg translate
calendar
grestore
} if
next_small_cal 0 ge {
/year n_year def
/month n_month def
/startbox n_startbox def
/ndays n_ndays def
gsave
next_small_cal boxpos translate
scscale dup scale
scoffset ytop neg translate
calendar
grestore
} if
/startbox sv_startbox def
} bind def
/year 2001 def
/month 10 def
/startbox 1 def
/ndays 31 def
/noteboxes [ ] def
/date_color [ -1  0 0 0 0 0 1 1 1 0 0  0 0 1 1 0 0 0 0 0 1  1 0 0 0 0 0 1 1 0 0  0 ] def
/Lfootstring () def
/Cfootstring () def
/Rfootstring () def
/notesheading (Notes) def
/p_year 2001 def
/p_month 9 def
/p_startbox 6 def
/p_ndays 30 def
/n_year 2001 def
/n_month 11 def
/n_startbox 4 def
/n_ndays 30 def
/moon_phases [		% from algorithm
	0.467 0.497 0.529 0.560 0.592 0.625 0.658 0.692 0.726 0.762
	0.798 0.835 0.873 0.911 0.950 0.988 0.026 0.063 0.099 0.134
	0.167 0.199 0.231 0.262 0.292 0.322 0.352 0.382 0.413 0.444
	0.476 ] def
printmonth
8 [ 
(Columbus) (Day) (\050observed\051) 
] holidaytext
1 [ 
(Jimmy) (Mattison) (birthday) 
] daytext
5 [ 
(Black) (bin\072) (paper) 
] daytext
12 [ 
(Red) (bin\072) (glass\054) (cans\054) (plastic) 
] daytext
19 [ 
(Black) (bin\072) (paper) 
(\056p)
(ARLEX) (service) (call\054) (8\07230\05511\07230) 
] daytext
26 [ 
(Red) (bin\072) (glass\054) (cans\054) (plastic) 
] daytext
28 [ 
(DST) (ends) (\050fall) (back\051) 
] daytext
31 [ 
(Halloween) 
] daytext
showpage
