#!/bin/sh

source script-x
set -u
progname="$(basename $0)"
source eexec
eexec_program=$(EExec_parse "$@")
for op in $eexec_program
do
  $op
  shift
done
unset eexec_program

: ${just_print_regexp_p=}

# gdmf_regexps=()
# # Who knows when or where this can happen
# # Error opening surface_write_read.so: /lib/tls/libc.so.6: version `GLIBC_2.4' not found
# gdmf_regexps+=("Error opening.*\.so:.*lib.*not found")

# # ASIM bullshit
# # ERROR: cannot aquire /tmp/asim.X
# gdmf_regexps+=("ERROR: cannot aquire /tmp/asim.X")

# # RTL bullshit
# # something bad happened
# # Yes, that's the message. something. bad. happened.
# gdmf_regexps+=("something bad happened")

# gdmf_regexps+=("RT_FAIL" "Error: LoadPlugin: couldn't load plugin library")
# gdmf_regexps+=("call stack" "stack trace")
# gdmf_regexps+=("KeyError: .OUT.")
# gdmf_regexps+=("qemu: could not load kernel")
# gdmf_regexps+=("ERROR: cannot find /home/scratch\.")

source gdmf-regexps
EExec_verbose_msg "gdmf-regexps>${gdmf_regexps[@]}<gdmf-regexps"

[ "${1-}" = "-p" ] && {
    shift
    settrue just_print_regexp_p
}

regexp=
sep=

{
    EExec_verbose_msg "Looking for these test killing gdmf_regexps:"
    set --  "${gdmf_regexps[@]}"
    EExec_verbose_msg "@>$@<@"
    while (($# > 1))
    do
      case "${1}" in
          # Skip non-fatal grep patterns.
          --hgrep) shift; shift; continue;;
      esac
      shift
      EExec_verbose_msg " >${1}<"
      regexp="${regexp}${sep}${1}"
      sep="|"
      shift
    done
} 1>&2

vtruep "${just_print_regexp_p}" && {
    echo "${regexp}"
    exit 0
}

EExecDashV_p && echo_id 1>&2 regexp

EExec -0 egrep "${regexp}" "$@"

