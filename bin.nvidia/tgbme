#!/bin/sh

source script-x
set -u
progname="$(basename $0)"
source eexec
eexec_program=$(EExec_parse "$@")
for op in $eexec_program
do
  $op
  shift
done
unset eexec_program

: ${purge_p=}
: ${go_p=t}
: ${sb=}                        # "" is current.
: ${debug_opt_def=-debug=1}
: ${debug_opt=debug_opt_def}
: ${send_mail_on_completion=t}

# Usage variable usage:
Usage_args_info=""
Usage_synopsis="Build plugins in testgen dir.
"
# Using ) after the args makes copy & paste between here and the 
# case statement easier.
Usage_details="${EExec_parse_usage}
--no-purge) Don't do a purge first.
--purge) Not no-purge.
--goto-tg|--go) Go to the tg dir with mecd tg.
--no-goto-tg|--stay) Don't.
--sb <sb>) If --go, go to tg in sb.
--debug) make with -debug=1.
--no-debug) Don't.
--mail) Send mail when done.
--no-mail) Don't.
"
# Example of arg parsing.
option_str="${EExec_parse_option_str}"
long_options=("no-purge" "purge" 
"goto-tg" "go"
"no-goto-tg" "stay"
"debug" "no-debug")

source dp-getopt+.sh
for i in "$@"
do
  # do. e.g.  shift; $OPTION_ARG=$1;; # to process options with arguments.
  case $1 in
      # eexec support
      -n) EXEC=echo; EExecDashN;; # Don't actually execute stuff
      -v) VERBOSE="echo $progname: "; EExecVerbose;;
      -q) VERBOSE=":"; EExecQuiet;;

      # Program options.
      --purge) purge_p=t;;
      --no-purge) purge_p=;;
      --goto-tg|--go) go_p=t;;
      --no-goto-tg|--stay) go_p=t;;
      --sb) shift; sb="${1}";;
      --debug) debug_opt="${debug_opt}";;
      --no-debug) debug_opt=;;
      --mail) send_mail_on_completion=t;;
      --no-mail) send_mail_on_completion=;;

      # Help!
      --help) Usage; exit 0;;
      --) shift ; break ;;
      *) echo 1>&2 "Unsupported option>$1<"
         exit 1;;
    esac
    shift
done

[ "${1-}" = "--no-purge" ] && {
    purge_p=
    shift
}

vsetp "${go_p}" && {
    if vsetp "${sb}"
    then
        EExec -y mecd "${sb}" testgen
    else
        EExec -y mecd testgen
    fi
}

vset "${purge_p}" && {
    EExec ./build_gpu_multiengine.pl purge
    echo "***** Purge Complete *****"
}

EExec ./build_gpu_multiengine.pl ${debug_opt}
echo "***** Build Complete *****"

vsetp "${send_mail_on_completion-}" && {
    mail -s "$progname is done" "${USER}" < /dev/null >/dev/null 2>&1
}
exit 0
