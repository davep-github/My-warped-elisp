#!/bin/sh

source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
EExec_verbose_msg $(echo_id eexec_program)
unset eexec_program
# Or export eexec_program to propagate eexec info to a called program.
# export eexec_program

: ${purge_opt=}
: ${debug_opt=-debug=1}
: ${build_prog:=./build_gpu_multiengine.pl}
: ${yopp_p=t}
# Usage variable usage:
Usage_args_info=" bgme [--purge] [--no-debug]"
Usage_synopsis="Build GPU ME plugins:
"
# Using ) after the args makes copy & paste between here and the
# case statement easier.
Usage_details="${EExec_parse_usage}
--purge) Build purge target
-n|-d|--no-debug) Don't build with -debug=1
--build) Build program
-y|--no-yopp) Don't send email when done
"
# Example of arg parsing.
option_str="${EExec_parse_option_str}pnd"
long_options=(
"purge"
"no-debug" "nd"
"build"
"no-yopp"
)

source dp-getopt+.sh
while (($# > 0))
do
  # do. e.g.  shift; $OPTION_ARG=$1;; # to process options with arguments.
  case $1 in
      # eexec support
      # Done by EExec_parse and friends.

      # Program options.
      -p|--purge) purge_opt=purge;;
      -n|-d|--no-debug|--nd) debug_opt=;;
      --build) shift; build_prog="${1}";;
      -y|--no-yopp) yopp_p=;;

      # Help!
      --help) Usage; exit 0;;
      --) shift ; break ;;
      *) echo 1>&2 "Unsupported option>$1<"
         exit 1;;
    esac
    shift
done

mecd testgen
EExec_verbose_msg "pwd: $(pwd)"
vsetp "${purge_opt}" && {
    EExec "${build_prog}" ${purge_opt}
}

EExec "${build_prog}" ${debug_opt}
rc=$?

vsetp "${yopp_p}" && {
    EExec email-yopp "RC: ${rc}: GPU ME build done."
}

