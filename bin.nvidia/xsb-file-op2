#!/bin/sh

source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
EExec_verbose_msg $(echo_id eexec_program)
unset eexec_program
# Or export eexec_program to propagate eexec info to a called program.
# export eexec_program

# args sb file...

: ${xsb_program:=diff}
: ${xsb_program_opts=-u}

run_xsb_program()
{
    local file="${1}"
    local file_dirname
    case "${file}" in
        */*) file_dirname=$(dirname ${file});;
        *) file="./${file}"; file_dirname=.;;
    esac
    local here="$(me-expand-dest ${file})"
    local there=$(me-expand-dest "${file_dirname}" "${sb}")/$(basename "${file}")

    local bail_p=
    {
        vunsetp "${here}" && {
            echo "here file>$here< does not exist."
            bail_p=t
        }
        vunsetp "${there}" && {
            echo "there file>$there< does not exist."
            bail_p=t
        }
    } 1>&2

    true_p "${bail_p}" && return
    EExec -0 "${xsb_program}" ${xsb_program_opts}  "${here}" "${there}"
}

while (($# > 0))
do
  EExec_verbose_msg "1>$1<"
  case "$1" in
      -p|--prog|--program|--app|--tool) shift; xsb_program="${1}"; xsb_program_opts=;;
      --prog-opts|--program-opts|--app-opts|--tool-opts) shift; xsb_program_opts="${1}";;
      --) shift; break;;
      *) break
  esac
  shift
done

sb="${1}"
sb_dir=$(me-expand-dest "${sb}")
shift

if (($# > 0))
then
    for file in "$@"
    do
      run_xsb_program "${file}"
    done
else
    while read
    do
      run_xsb_program "${REPLY}"
    done
fi
