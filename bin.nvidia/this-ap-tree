#!/bin/sh

source script-x
set -u
progname="$(basename $0)"
source eexec
eexec_program=$(EExec_parse "$@")
for op in $eexec_program
do
  $op
  shift
done
unset eexec_program

: ${path_echo:=realpath}
: ${just_depth_p=}

# Usage variable usage:
Usage_args_info=""
Usage_synopsis="Determine the ap tree we are in:
"

Usage_details="${EExec_parse_usage}
-R|--no-realpath|-e|--echo|--just-echo) Don't use realpath on the result.
-r|--realpath) Do use realpath on the result.
-d|--depth) Dump the value of depth(nv)
"
# Example of arg parsing.
option_str="${EExec_parse_option_str}Rerd"
 long_options=(
     "no-realpath" "echo" "just-echo"
     "realpath"
     "depth"
)
source dp-getopt+.sh
for i in "$@"
do
  # do. e.g.  shift; $OPTION_ARG=$1;; # to process options with arguments.
  case $1 in
      # eexec support
      # Done by EExec_parse and friends.

      # Program options.
      -R|--no-realpath|-e|--echo|--just-echo) path_echo=echo;;
      -r|--realpath) path_echo=realpath;;
      -d|--depth) just_depth_p=t;;

      # Help!
      --help) Usage; exit 0;;
      --) shift ; break ;;
      *) echo 1>&2 "Unsupported option>$1<"
         exit 1;;
    esac
    shift
done

# Duplicate depth(nv) command with realpath capability.
d=$(depth)
true_p "${just_depth_p}" && {
    "${path_echo}" "${d}"
    exit 0
}

p=$(realpath "${$d}")

[ -d "${p}" ] || {
    echo "Cannot the ap tree we are in."
    exit 1
} 1>&2

"${path_echo}" "${p}"
