#!/bin/sh

source maybe-davep

# Run a test looking for common stupid errors that should have been fixed long ago.
# Most are absolutely fatal but don't exit. This often results in a test that runs forever.
# I really want to cry.
# And some of mine as well.
# Check for a (gdb) prompt to let me know if I'm running a test that I've set
# up to run under gdb. When this happens the test hangs because gdb is
# waiting for input. I could just send a 'run' command, but I prefer to know
# and exit so I can do it right.

[ -e "/tmp/asim.*" ] && {
    echo "The dreaded /tmp/asim.X exists. What is X you ask? Well, it is X."
    exit 1
} 1>&2 

# any_shell_p=t defaults to true in my environment.
echo_id any_shell_p
$EEXEC tgen-run-dot-sh-logged \
    ${maybe_davep_dash_n} \
    --hgrep 'surface_write_read:' \
    --egrep 'Error opening.*\.so:.*lib.*not found' \
    --egrep 'ERROR: cannot aquire /tmp/asim.X' \
    --egrep 'something bad happened' \
    --egrep '\(gdb\)' \
    --egrep 'RT_FAIL' \
    --egrep "Error: LoadPlugin: couldn't load plugin library"
    --hgrep 'call stack' \
    --hgrep 'stack trace' \
    --egrep 'KeyError: .OUT.' \
    --egrep 'qemu: could not load kernel' \
    --hgrep 'waiting for a connection on port [0-9]+' \
    "$@"
