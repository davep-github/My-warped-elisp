#!/bin/bash
#set -x
realpath=$(realpath $0)
progname=$(basename $realpath)
bindir=$(dirname $realpath)

l_HOME="$HOME"
l_HOME_LOG_DIR="$l_HOME/log/$progname.d"
[[ -d $l_HOME_LOG_DIR ]] || mkdir $l_HOME_LOG_DIR || exit 3
log_base="$l_HOME_LOG_DIR/$progname"
: ${DP_NO_LOG:=""}
: ${DP_SEND_STDERR_TO:="${log_base}.err.log"}
: ${DP_SEND_STDOUT_TO:="${log_base}.out.log"}
: ${DP_RUN_EXECUTOR:=}          # Run with this, e.g. use exec or gdb, or ...
if [[ -z "$DP_NO_LOG" ]]; then
    log_file_err=${DP_SEND_STDERR_TO}
    log_file_out=${DP_SEND_STDOUT_TO}
    touch $log_file_out
    touch $log_file_err
else
    log_file_err=/dev/null    
    log_file_out=/dev/null
fi

{
    echo "=== start: $(date) ================================"
    echo "=== start: $(date) ================================" 1>&2

    # realpath breaks here since the child is most likely not in the path
    # (that's why we're using this)
    if [[ -n "$DP_SETUP_ENV_ONLY" ]]; then
        child="$0"
    else
        child="$1"
    fi
    childname=$(basename $child)
    childdir=$(dirname $child)
    our_pid="$$"
    : ${DP_SETUP_ENV_ONLY_P:=""}

    echo "tty>$(tty)<"; echo "rc: $?"
    echo "PATH>$PATH<"
    echo "@>$@<"
    $l_HOME/bin.Linux.i686/eko "$@"
    $l_HOME/bin.Linux.i686/eko $@
    # Save "$@" in a way that preserves the existing tokenization.
    dat=("$@")                  # Save "$@"
    $l_HOME/bin.Linux.i686/eko "${dat[@]}" ${dat[@]}
    echo '${dat[@]}'">${dat[@]}<"
    # Bullshit KDE apps run from the panel get a shitty environment.
    # !<@todo Perhaps it could (should/blush) be
    # done in one of my X rc files? I know I load it at one point, but maybe
    # it's at the wrong time.
    # Is there a KDE init file I can use?
    if ! type davep_env_p >/dev/null 2>&1; then
    	echo "Need to source ~/.bashrc"
        source $HOME/.bashrc
	echo "Prepending $0's dir to path."
	export PATH=$(pathadd -p "$PATH" "$dirname")
	echo "PATH>$PATH<"
    fi
    eko "${dat[@]}"

    #echo "======= Environment ============================="
    #env
    #echo "======= Environment ============================="

    [[ -z "$DP_SETUP_ENV_ONLY" ]] && {
        echo "running "'${dat[@]}'">${dat[@]}<"
        echo "running "'${dat[@]}'">${dat[@]}<" 1>&2
        ${DP_RUN_EXECUTOR} "${dat[@]}"
    }

    echo "=== finish: $(date) ================================"
    echo "====finish: $(date) ================================" 1>&2

} >> $log_file_out 2>> $log_file_err
