#!/usr/bin/env bash
source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
EExec_verbose_msg $(echo_id eexec_program)
unset eexec_program
#export eexec_program
# Or export eexec_program to propagate eexec info to a called program.
# export eexec_program

trap_exit_msg=

# Useful traps
on_exit()
{
    local rc="$?"
    local signum="${1-}"; shift

    echo "on_exit: rc: $rc; ${trap_exit_msg}"
}

on_error()
{
    local rc="${1-}"; shift

    echo "on_exit: rc: $rc; ${trap_exit_msg}"
    trap '' 0
}

#
# template ends.
########################################################################


just_show=
X_opt=-X
for i in "$@"
do
  # Apply -N to next arg only. Multiple -Ns may be specified.
  [ "$i" = "-N" ] && {
      just_show=-N
      continue
  }

  # Apply -X to next arg only. Multiple -Xs may be specified.
  [ "$i" = "-X" ] && {
      X_opt=
      continue
  }

  host=$(expand-hostname $i)
  case "$host" in
      *@) host="${host}localhost";;
      *) ;;
  esac
  EExec_verbose_echo_id host
  full_host=$(full-hostname $host) # || dpFATAL 1 "getting full-hostname for >$host< failed"
  EExec_verbose_echo_id full_host
  hname=${full_host:-$host}
  shost=$(echo $hname | cut -d. -f1)
  title_base=$(rx_name rlogin $hname)
  # We need to know the xrl program to run on the rsh'ing host, not the rsh'd
  # to host.
  rsh_bin=${XRL_BIN:-$($HOST_INFO -n 'rsh' xrl_rsh_bin)}
  # This is the xterm we run on our local machine.
  xrl_xterm_bin=${XRL_XTERM_BIN:-$($HOST_INFO -n 'xterm' xrl_xterm_bin)}
  # These are local options needed by the local machine's rsh_bin.
  xrl_bin_opts=${XRL_BIN_OPTS:-$($HOST_INFO -n '' xrl_xterm_bin_opts)}
  font=${XRL_XTERM_FONT:-$($HOST_INFO -n "${DEFONT-}" xrl_xterm_font)}
  [ -z "$font" ] && font=9x15
  # Now we need info about the remote host.
  # E.g. what are it's xterm colors?  We rsh to the remote host and our local
  # xterm has the same appearance as a dpxx(dp) done locally on that host.

  EExec dpxx $just_show -h $host -n $title_base -f $font \
        -- ${rsh_bin} ${X_opt} ${host}
  just_show=
  X_opt=-X
done
