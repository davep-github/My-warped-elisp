#!/bin/bash

source script-x
set -u
progname="$(basename $0)"
source eexec
eexec_program=$(EExec_parse "$@")
for op in $eexec_program
do
  $op
  shift
done
unset eexec_program

: ${annotation=}
: ${run_cmd_p=}
RC=-
: ${mail_to:=${EMAIL_YOPP_ADDR}}

while (($# > 0))
do
  case "$1" in
      --cron) annotation="cron: ${annotation}";;
      --anno|--annotation) shift; annotation="${annotation} ${2}";;
      --run|--exec|--eval|--cmd) run_cmd_p=t;;
      --rc|--RC) shift; RC="${1}";;
      --mail-to|--mailto|--addr|--yoppee) shift; mail_to="${1}";;
      --) shift; break;;
      *) break;
  esac
  shift
done

[ -z "${mail_to}" ] && {
    echo "I need an email addr to send to.
export EMAIL_YOPP_ADDR or use --mail-to <yoppee> option."
    exit 1
} 1>&2

if vunsetp "$*"
then
    type="No msg."
elif true_p "${run_cmd_p}"
then
    # the message is really a command to run and wait for completion thereof.
    EExec --keep-going "$@"
    RC="$?"
    type="CMD[RC: $RC]: "
else
    if [ "${RC}" = "-" ]
    then
        prefix=
        rcpart=
    else
        rcpart="[RC: $RC]"
    fi
    type="MSG${rcpart}: "
fi

: ${prefix="RC: ${RC}: "}
msg="$progname: in ${PWD}: ${type}$@"

{
    echo "On $(date)"
    echo "${msg}"
} | EExec send-mail-command-line.sh -s "${prefix}${annotation}YOPP! ${msg}" "${EMAIL_YOPP_ADDR}"
