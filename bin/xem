#!/bin/sh
/home/dpanariti/yokel/bin/xemacs&
echo 1>&2 "Restore normal functionality when host info stuff is working."
exit 99

#
# $Id: xem,v 1.36 2005/06/12 08:20:10 davep Exp $
# Start up an (x)emacs session with defaults from the HOST_INFO
#  database.
# Items are obtained from the database by concatenating
#  a prefix to the item.  Two main prefixes
#  are defined:
#  xem -- when the X client/server are the same
#  lem -- when the X server is where you are typing an the
#         X client is elsewhere (e.g. using a laptop)
#
#set -x

. script-x

#log_file=`dp-mk-tmp-file $LOG/xmacs/xem.XXXXXX`
log_file="$HOME/log/xemacs/xem-run.log"
{
    echo "======= $0 ===================================" 
    date
    echo "@:" "$@"
    echo "pwd: $(pwd)"
    echo "PATH>$PATH<"
    echo "USER>$USER<"
    echo "HOST>$HOST<"
    echo "HOST_INFO>$HOST_INFO<"
    host-info.py -n AHHHHHHHHHHHHHH xem_bg_color
    $HOST_INFO -n AHHHHHHHHHHHHHH xem_bg_color
    sp $HOST_INFO
    sp host-info.py
} >> $log_file


prog=`basename $0`

font="$XEM_FONT"
x_offset=0
main_macs=y
verbose=
VERBOSE=:
amper='&'
do_renice=

case "$prog" in
    xem) prefix='xem';;
    lem) prefix='lem';;
    xemrn|xemhp) prefix='xem'; do_renice=t;;
    *) echo 1>&2 "Unsupported program name>$prog<"; exit 1;;
esac

# xem [xem-opts] [-- [xemacs-opts]]
#eko "$@"
###set -- $(getopt "dlxp:f:o:nmMvhF" $*)
# New style getopt... fixes ugly quoting problems.
all_options="dlxp:f:o:nmMvhF"
q=$(getopt -o "$all_options" -- "$@")
[ $? != 0 ] && Usage
eval set -- "$q" 
unset q

for i in $*
do
    case $1 in
	-d) cd $dir || {
		echo 1>&2 "cannot cd to $dir"
		exit 1
	    }
	    did_cd=y
	    ;;
        -h) did_cd=y;;          # stay where we are (here)
	-l) prefix='lem';;
	-x) prefix='xem';;
        -r) prefix='xem'; do_renice=t;;
	-o) x_offset=$2; shift;;
	-p) prefix="$2"; shift;;
	-f) font="$2"; shift;;
	-n) just_show=y;;
	-m) main_macs=y;;	# force startup of appointments and server
	-M) main_macs=n;;       # prevent startup of appointments and server
        -v) verbose=y; VERBOSE=echo;;
        -F) amper=;;            # Run in foreground.
	--) shift; break;;
	*) echo 1>&2 "Illegal xem option>$1<"; exit 1 ;;
    esac
    shift
done

[ -z "$did_cd" ] && cd $HOME

if [ -z "$XEM_BIN" ]
then
    BIN=$($HOST_INFO -n emacs ${prefix}_bin)
else
    BIN=$XEM_BIN
fi

[ -z "$main_macs" ] && {
    # guess main macs status
    # we're the main if we're the only one
    if findprog $BIN > /dev/null
    then
	# @todo check for other macsen using dp-main-rm
	#  if no other main, then we're it.
	main_macs=n
    else
	main_macs=y
    fi
}

emacs_opts="$@"

OPTS=$($HOST_INFO -n '' ${prefix}_opts)
if [ -z "$BG_COLOR" ]
then
    BG_COLOR=$($HOST_INFO -n '' ${prefix}_bg_color)
fi
[ -n "$BG_COLOR" ] && BG_COLOR="-bg $BG_COLOR"
[ -z "$font" ] && font=$($HOST_INFO -n '' ${prefix}_font)

if [ -z "$font" ]
then
    font_arg=''
else
    font_arg='-font $font'
fi

#[ x"$font" = "x-" ] || OPTS="$OPTS -font $font"
PRE_CMD=$($HOST_INFO -n '' ${prefix}_pre_cmd)
[ "$main_macs" = 'y' ] && {
    MAIN_MACS_RC=$($HOST_INFO -n '' 'main_macs_opts')
}
XEM_XFT_FONT=$($HOST_INFO -n '' 'xem-xft-font')
vsetp $XEM_XFT_FONT && {
    FONT_SET_EXPR=("-eval" "'" "(set-default-font $XEM_XFT_FONT)" "'")
    echo "[0]>${FONT_SET_EXPR[0]}<"
    echo "[1]>${FONT_SET_EXPR[1]}<"
    echo "[@]>${FONT_SET_EXPR[@]}<"
eko "${FONT_SET_EXPR[@]}"
    
}


if [ -z "$OPTS" ]
then
    case $HOST in
	clove*)
	    disp=`echo $DISPLAY | sed 's/0\.0/0\.1/'`
	    OPTS="-display $disp -geometry 80x54+20+8"
	    ;;
	*)
	    OPTS=
	    ;;
    esac
fi

    
[ -n "$PRE_CMD" ] && eval "$PRE_CMD"
cmd_args="$OPTS $BG_COLOR $MAIN_MACS_RC $emacs_opts"
$VERBOSE echo exec $BIN $cmd_args
[ -n "$verbose" ] && eko exec $BIN $cmd

$VERBOSE echo ">>>>>>>>>>>>>>>>>>>>>>$log_file<<<<<<<<<<<<<<<<<<<<<<"
niceness="-20"
nice_cmd="sudo nice -n $niceness"
renice_cmd="sudo renice -n $niceness"
cmd='$BIN -font "$font"  '${FONT_SET_EXPR[@]}' $cmd_args'
if [ "$just_show" != 'y' ]
then
    #echo "dir>$PWD<"
    set -v
    #eval exec $cmd  >> $log_file 2>&1 $amper
    # Why didn't the exec fuck things up?
    eval $cmd  >> $log_file 2>&1 $amper
    xem_pid=$!
    if vsetp "$amper" && vsetp "$do_renice"
    then 
        $renice_cmd -p $xem_pid
    fi
else
    # why this ?echo $BIN -font "$font" $cmd_args 2>&1 | tee --append $log_file
    # instead of the below?
    eval echo $cmd 2>&1 | tee --append $log_file
fi
