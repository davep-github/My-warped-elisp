#!/bin/bash

source script-x
set -u
progname="$(basename $0)"
source eexec
eexec_program=$(EExec_parse "$@")
for op in $eexec_program
do
  $op
  shift
done

: ${ssh_port=${DP_HOME_MACHINE_SSH_PORT=22}}

ssh_home()
{
    local fq_home_box=$(EExec -y fq_home_box "$@")
    EExec_verbose_msg "ssh_home: home[$DP_HOME_MACHINE], fq info: ${fq_home_box}"
    EExec exec ssh -p "${ssh_port}" "${fq_home_box}"
}

[ "${DP__name__=""}" = "__main__" ] || exit 0

: ${source_var_file_p=t}

#Usage variable usage:
Usage_args_info=" [<eexec-opts>]"
Usage_synopsis="ssh to default home machine.
"
Usage_details="-n -- Show what would happen but don\'t do it. [eexec]
-v -- Be verbose about it. [eexec]
-q -- Anti-verbose. [eexec]
"
# Example of arg parsing.
Usage_args_info="No args"
Usage_details="$EExec_parse_option_str
-s -- Do not source most recent vars
-S <source-file> -- Do source <var-file> immediately. May be repeated."
option_str="nvqsS:p:"
source dp-getopt+.sh
for i in "$@"
do
  # do. e.g.  $OPTION_ARG=$2; shift;; to process options with arguments.
  case $1 in
      # eexec support
      -n) EXEC=echo; EExecDashN;; # Don't actually execute stuff
      -v) VERBOSE="echo $progname: "; EExecVerbose;;
      -q) VERBOSE=":"; EExecQuiet;;
      # Program options.
      -s) export source_var_file_p=;;
      -S) shift; source "${1}";;
      -p) shift; ssh_port="${1}";;
      --) shift ; break ;;
      *) 
      echo 1>&2 "Unsupported option>$1<";
      Usage
      exit 1 ;;
    esac
    shift
done

ssh_home "$@"
