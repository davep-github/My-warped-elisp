#!/bin/bash
source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
EExec_verbose_msg $(echo_id eexec_program)
unset eexec_program
#export eexec_program
# Or export eexec_program to propagate eexec info to a called program.
# export eexec_program

trap_exit_msg=

# Useful traps
on_exit()
{
    local rc="$?"
    local signum="${1-}"; shift

    echo "on_exit: rc: $rc; ${trap_exit_msg}"
}

on_error()
{
    local rc="${1-}"; shift

    echo "on_exit: rc: $rc; ${trap_exit_msg}"
    trap '' 0
}

# Try based on directory name:
vsetp "${DP_SB_DIR_SED_EXPR-}" || {
    echo "Not enough information to guess sandbox name."
    exit 1
}

if (($# > 0))
then
    places=("$@")
else
    places=($(pwd))
fi

EExec_verbose_echo_id DP_SB_DIR_SED_EXPR
for place in "${places[@]}"
do
  EExec_verbose_echo_id place
  sb=$(echo "${place}" | sed -rn "${DP_SB_DIR_SED_EXPR}")
  vsetp "${sb}" || {
      echo "Could not find sandbox using >${DP_SB_DIR_SED_EXPR}< on
>${place}<"
      exit 1
  }
  echo "${sb} ${place}"
done

exit 0
