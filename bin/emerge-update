#!/bin/bash

source script-x
source eexec
EExecVerbose
EExecDashN

: ${sync_p=}
: ${ask_p=}
: ${unmasking:=--autounmask --autounmask-write}
: ${dispatch_p=t}
: ${dispatcher=dispatch-conf}
: ${sets:=world}

# These are convenient for eexec
: ${eexec_options='nvq'}

doc_string='Simple emerge update operations.'

# Simple way to get the equivalent of keyword arguments:
# This sets a default which can be overridden thus:
# cheap_keyword_arg=not-blah some-program <other args>
#: ${cheap_keyword_arg:=blah}

option_str="saADd:S:"  # <:add new options:>
all_options="${option_str}${eexec_options-}"
q=$(getopt -o "$all_options" -- "$@")
[ $? != 0 ] && Usage
eval set -- "$q" 
unset q

for i in "$@"
do
  # do. e.g.  $OPTION_ARG=$2; shift;; to process options with arguments.
  case $1 in
      -n) EExecDashN;;          # Don't actually execute stuff
      -v) EExecVerbose;;        # Blah, blah, blah.
      -q) EExecQuiet;;

      # Your other options go here.
      # An example of options which have values:
      -s) sync_p=t;;
      -a) ask_p=t;;
      -A) unmasking=;;
      -D) dispatch_p=;;
      -d) shift; dispatcher="$1";;
      -S) shift; sets="$1";;
      --) shift ; break ;;
      *) 
      echo 1>&2 "Unsupported option>$1<";
      Usage
      exit 1 ;;
    esac
    shift
done

if [ -n "$ask_p" ]
then
    ask_opt=-a
else
    ask_opt=
fi

[ -n "$sync_p" ] && {
    EExec emerge --sync
}

EExec emerge $unmasking $ask_opt -uvND $sets

[ -n "$dispatch_p" ] && {
    EExec $dispatcher
}
