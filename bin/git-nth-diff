#!/bin/bash
# I'm sure this exists somehow, somewhere.

source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
EExec_verbose_msg $(echo_id eexec_program)
unset eexec_program

Usage()
{
    echo "Usage: ${progname} <nth> files...
Run diff on files and their <nth> previous *change*, not simply HEAD~<nth>."
}

if (($# == 0))
then
    Usage 1>&2
    exit 1
fi

: ${base_rev=HEAD}
: ${diff_tool=}

export base_rev

nth=${1-}
shift

loop_guts()
{
    local file="${1-}"
    shift
    local rev=$(git-nth-rev "$nth" "$file")
    EExec_verbose_echo_id rev
    if [ -z "$rev" ]
    then
        echo "$file has no ${nth}${th} previous rev."
        continue
    fi 1>&2

  # sha1 is fixed length so putting it first lines things up.
    EExec_verbose_msg "sha1: ${rev} file: ${file}"

    if vsetp "${diff_tool}"
    then
        EExec git difftool --tool="${diff_tool}" "$rev" -- "$file"
    else
        EExec git diff "$rev" -- "$file"
    fi
}

if [ "$nth" = 1 ]
then
    th="st"
else
    if [ "$nth" = 2 ]
    then
        th="nd"
    else
        th="th"
    fi
fi

if [ "$*" = "" ]
then
    loop_guts "HEAD"
else
    for file in "$@"
    do
      loop_guts "${file}"
    done
fi
