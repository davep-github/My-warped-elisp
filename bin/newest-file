#!/bin/sh

. script-x

prog=`basename $0`
#echo $prog: $* 1>&2

Usage()
{
    echo 1>&2 "${prog}: usage: [-$option_str] [dirs...]"
    echo 1>&2 "  Print newest file in each of dirs..."
    echo 1>&2 "  no dirs/files... --> cwd"
    echo 1>&2 "  -n   - print nth newest file Newest is 0."
    echo 1>&2 "  -o   - all things relative to oldest vs newest files."
    exit 1
}

dir_filter()
{
    [ -d "$1" ] && echo "$1"
}

file_filter()
{
    [ -f "$1" ] && echo "$1"
}

pan_filter()
{
    echo "$1"
}

list_files()
{
    local dirOpt=$1; shift
    local filter
    local dash_d=-d
    if [ -n "$dirsOnly" ]
    then
        filter=dir_filter
    elif [ -n "$filesOnly" ]
    then
        filter=file_filter
    else
        filter=pan_filter
    fi

    vunsetp "${dirOpt}" && dash_d=
    ls "$@" $dash_d $dirOpt | while read
    do
      $filter "$REPLY"
    done
}

# init optional vars to defaults here...
: ${nth:=1}
: ${ls_opts:="-t1"}
: ${extra_ls_opts:=""}
: ${allow_cwd=""}               # Return . if newest?
: ${dirsOnly=""}
: ${filesOnly=""}
: ${basename_p=""}
: ${realpath_p=""}

# see the man page of getopt for inadequacies.

option_str='n:drDo0123456789l:cpbRf'
q=$(getopt -o "$option_str" -- "$@")
eval set -- "$q"
R=1
rev_opt=

[ $? != 0 ] && Usage

for i in $*
do
    case $1 in
	-n) nth=$((1 + $2)); shift;;
        -[0-9]*) nth=$((1 - $1));; # -nnn looks negative
        -r) R=$nth;;
        -o) rev_opt=-r;;
        -d) dir_opt=-d;;
        -D) extra_ls_opts="$extra_ls_opts -d";;
        -l) extra_ls_opts="$extra_ls_opts $2"; shift;;
        -c) allow_cwd=t;;
        -p) dirsOnly=t;;
        -f) filesOnly=t;;
        -b) basename_p=t;;
        -R) realpath_p=t;;
	--) shift ; break;;
	*)
	    echo 1>&2 "Unsupported option>$1<";
	    exit 1 ;;
    esac
    shift
done
ls_opts=$(dashify "$ls_opts")
extra_ls_opts=$(dashify "$extra_ls_opts")

if [[ -z "$dir_opt" ]]; then
    dir_opt="$@"
    set -- .
else
    [ "$*" = '' ] && set -- .
fi

last_newest=
dot=$(pwd)
for arg in "$@"
do
  tnth=$nth
  cd $arg
  dir=$(pwd)
    # ls -t1 | head -n4 | tail -n1
  while :
  do
    newest=$(list_files "$dir_opt" $ls_opts $extra_ls_opts $rev_opt \
                        | head -n$tnth | tail -n$R)
    [ "${last_newest}" = "${newest}" ] && {
        # Newest hasn't changed, so we've run out of things to try."
        exit 1
    }
    last_newest="${newest}"
    #echo_id newest
    if [ -z "$allow_cwd" ]
    then
        case "$newest" in
            */.|*/..|.|..) ((++tnth))
                           continue;;
            *) break;;
        esac
    fi
    break
  done
  filename=$dir/$newest
  if vtruep "${realpath_p}"
  then
      realpath "${filename}"
  elif vtruep "${basename_p}"
  then
      basename "${filename}"
  else
      echo "${filename}"
  fi
  cd $dot
done
