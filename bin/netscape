#!/bin/sh
set -x

log_file='/dev/null'
#log_file='/tmp/xns.log'
echo '--' >> $log_file
date >> $log_file
for a in "$@"
do
    echo ">$a<"
done >> $log_file

if [ "x$1" = "x-w" ]
then
	shift
	amp=""
else
	amp='&'
fi

#exec /usr/local/communicator/netscape "$@" &

case $0 in
    *oxns*)
	ns_dir=`$HOST_INFO oxns_dir`
	ns_bin=`$HOST_INFO oxns_bin`
	[ "$ns_dir" = "-" ] && ns_dir=/usr/local/lib/netscape
	[ "$ns_bin" = "-" ] && ns_bin=netscape.bin
	export XUSERFILESEARCHPATH=./%N%C.ad:./%N.ad:$HOME/app-defaults/%N%C:/home/davep/app-defaults/%N
	;;
    *xns*)
	ns_dir=`$HOST_INFO xns_dir`
	ns_bin=`$HOST_INFO xns_bin`
	[ "$ns_dir" = "-" ] && ns_dir=$HOME/yokel/netscape-4.76
	[ "$ns_bin" = "-" ] && ns_bin=netscape
	;;
    *xmoz*)
	ns_dir=/usr/X11R6/bin
	ns_bin=mozilla
	ns_run_bin=mozilla-bin
	;;
esac

export MOZILLA_HOME=$ns_dir
cd $ns_dir

[ -z "$ns_run_bin" ] && ns_run_bin="$ns_bin"

if findprog $ns_run_bin > /dev/null
then
    if [ "$1" = "-remote" ]
    then
	# handle submissions from things like emacs
	cmd="$ns_dir/$ns_bin $1 '$2'"
    else
	cmd="$ns_dir/$ns_bin -remote 'openURL($*)'"
    fi
else
    echo "a" >> $log_file
    cmd="$ns_dir/$ns_bin $*"
fi

echo "eko..." >> $log_file
eval eko $cmd  >> $log_file
echo "...eko" >> $log_file

case "$amp" in
 \&) 
    echo "AMP" >> $log_file
    #nohup $cmd >/tmp/xns2.log 2>&1
    # must be a bug in bash.  Cannot start command async if called from
    # emacs.
    SHELL=tcsh tcsh -c "$cmd &"
    # >/tmp/xns2.log 2>&1 $cmd  &
    echo "status >$?<" >> $log_file

    ;;
 *) #eval echo "eval >"$cmd"<" >> $log_file    # this makes it fail
    echo "no amp"  >> $log_file
    eval $cmd
    ;;
esac
#eval $cmd $amp

echo "status >$?<" >> $log_file
