#!/bin/bash

# For merge, args: --merge BASE LOCAL REMOTE

echo "@>$@<"
source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
#unset eexec_program
# Or export eexec_program to propagate eexec info to a called program.
export eexec_program

set -x

# ec [-w] first second

wait_opt=
: ${ediff_func=ediff-files}
: ${merge_p=}

while (($# > 0))
do
  case "$1" in
      -q|--no-wait) wait_opt=;;
      -w|--wait) wait_opt='-w';;
      --merge) ediff_func="ediff-merge"; merge_p=t;;
      -u) ;; # This is often left over from a regular diff command. Ignore it.
      *) break;;
  esac
  shift
done

BASE="${1-}"
LOCAL="${2-}"
REMOTE="${3-}"
#echo "#>$#<"

if [ -n "${merge_p}" ]
then
    (($# != 4)) && {
            echo "Three file names are needed: BASE LOCAL REMOTE"
            echo "@>$@<"
            echo_id BASE
            echo_id LOCAL
            echo_id REMOTE
            exit 1
        } 1>&2
fi

BASE=$(realpath "${BASE}")
LOCAL=$(realpath "${LOCAL}")
diff_lisp="(ediff-files \"$BASE\" \"$LOCAL\")"
merge_lisp="(ediff-merge-files-with-ancestor \"$REMOTE\" \"$LOCAL\" \"$BASE\")"

case "${ediff_func}" in
    ediff-diff|ediff-files) eval_lisp="${diff_lisp}";;
    ediff-merge) eval_lisp="${merge_lisp}";;
    *) echo 1>&2 "unsupported ediff_func>${ediff_func}<"
       exit 1;;
esac

# Fix this to use some kind of ipc so the wait actually works.
#
# touch wait file.
# dp-ediff-files removes file when diff session ends?
# Need to figure out a way to make the diff command wait until the diff
# session completes.
# For now, we'll wait for an `Enter'
# -w here prevents the use of -q (don't wait) flag to gnuclient.
# -eval (gnuclient) doesn't seem to work with -q
#
EExec attempt-to-raise-emacs
EExec ec -w -e "${eval_lisp}"
if vsetp "${wait_opt}" && ! EExecDashN_p
then
    read -e -p "${progname}: Press enter to continue..."
fi
# wait for file to disappear.
