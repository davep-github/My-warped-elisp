#!/bin/bash
source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
EExec_verbose_msg $(echo_id eexec_program)
unset eexec_program
#export eexec_program
# Or export eexec_program to propagate eexec info to a called program.
# export eexec_program

: ${diff_tool=}

# Useful traps
on_exit()
{
    local rc="$?"
    local signum="${1-}"; shift

    echo "on_exit: rc: $rc; ${cron_opt}"
}

on_error()
{
    local rc="${1-}"; shift

    echo "on_exit: rc: $rc; ${cron_opt}"
    trap '' 0
}

git_hist_diff_file()
{

    local commit="$1"
    local file="$2"
    if vsetp "${diff_tool}"
    then
        EExec git difftool --tool="${difftool}" $commit -- "$file"
    else
        EExec git diff $commit -- "$file"
    fi
}

[ $# = 0 ] && {
    echo 1>&2 "usage: commit=<COMMIT> $(basename $0) files...
For all files, diff them against all specs in rev-list COMMIT"
}

revs=


EExec -y git-nth-rev --all --file-last "$@" | while read
do
#   echo_id REPLY
  set -- ${REPLY}
  echo "=============================================================================
======================= file: $2
======================= commit: $1"
  EExec -y git_hist_diff_file ${REPLY}
done
