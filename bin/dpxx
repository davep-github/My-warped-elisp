#!/bin/sh
#
# WAS: xx since late 80s. Now dpxx due to name clash @ nVIDIA.
# More convenient way to start up an xterm with my preferences.
# Has shorter option names for lazy typists.
# Also will get default xterm characteristics from hosts database 
# (M-x dp-visit-host-info).
# -h host option allows xterm to have characteristics of [remote] host instead of
#  the current host.  Useful for differentiating xterms connected to
#  other hosts (see xrl)
#
#env | sort >| ~/Esaw.s

source script-x

set -u

#font="7x13"
name=
amper='&'
extra_options=
xterm_bin=
: ${login_shell_p=t}
: ${just_show=}
window="@$(hostname)"
host=

# This was so that FARM boxes would get the correct colors.
# However, this is fixed in the host info file.
bg="${inherited_dpxx_bg-}"
fg="${inherited_dpxx_fg-}"

set_var()
{
set +u
    vname=$1			# variable's name
    db_val=$2			# value from the host-info db
    default=$3			# default value if host-info had no value
    eval vval=\$$vname
    case $vval in
	"")
	    case $db_val in
		"-") vval=$default;; 
		*) vval=$db_val;;
	    esac
	    ;;
	*)
	    ;;
    esac
	
    echo $vval
set -u
}
		
#
# Shorter params are easier for klutzy typists.
#
all_options="st:f:g:n:F:B:h:Nx:w:o:L"
#set -- ) getopt $all_options "$@" )
# New style getopt... fixes ugly quoting problems.
q=$(getopt -o "$all_options" -- "$@")
[ $? != 0 ] && Usage
eval set -- "$q" 
unset q

for i in "$@"
do
    case $1 in
	-f) font=$2; shift ;;
        -g) geometry="-geometry $2"; shift ;;
        -n) name="$2"; shift ;;
	-F) fg=$2; shift ;;
	-B) bg=$2; shift ;;
	-t) term=$2; shift ;;
	-s) amper= ;;
	-h) host="-h $2"; shift ;;
	-N) just_show=y;;
	-o) extra_options="$extra_options $2"; shift ;;
	-x) xterm_bin=$2; shift;;
        -w) window=$2; shift;;
        -L) login_shell_p=;;
        --) shift ; break ;;
        *) exit 1 ;;
    esac
    shift
done

args="$@"

#
# Lookup a bunch at once so we only hit the database once.

# Lookup the values of the dest host if one is provided.
# This is needed for things like xrl which opens an xterm
# and then rlogins to a remote host.  Using params for the remote
# host allows us to differentiate windows on different hosts.
#

opts=$($HOST_INFO $host xterm_bg xterm_fg)
eval set -- $opts

bg=$(set_var bg ${1-} gray40)
fg=$(set_var fg ${2-} white)

#
# the term runs locally, so get bin for local host
# other xterm parameters are based on the local host.
# The font could be considered a remote property for another
# differentiation, but the syntax is related to the local 
# term program
#
opts=$($HOST_INFO xterm_bin xterm_opts xterm_geometry xterm_font)
eval set -- $opts
[ -z "$xterm_bin" ] && xterm_bin=$(set_var options "$1" 'xterm')
options=$(set_var options "$2" '')
options="$options $extra_options"
geometry=$(set_var geometry $3 '')
: ${DEFONT=9x15}
font=$(set_var font $4 $DEFONT)

if [ "$args" != "" ]
then
    exe="$args"
else
    exe=""
fi

if [ "$name" = "" ] 
then
    if [ "$exe" != "" ]
    then
	set -- $exe
	name=$(basename $1)
    else
	name=$USER
    fi
    name=$(rx_name $name .)
fi
#name=$(serialize_name $name)
[ "$bg" = "" ] || bg="-bg '$bg'"
[ "$fg" = "" ] || fg="-fg '$fg'"

if [ "$font" = "*NONE*" ]
then
    font=""
elif [ -n "$font" ]
then
    font="-fn $font"
fi

if [ -n "$exe" ] 
then 
    exe="-e $exe"
    options=$(echo "$options" | sed s/-ls//g)
fi

if [ -n "$name" ]
then
    if [ "$xterm_bin" = "konsole" ]
    then
	name="-T $name"
    else
	name="-name $name -T $name"    
    fi
fi
# Konsole has problems with a name being set and using the xterm sequnces
# to set it... it always leaves the existing name in place
#options='-j -sb -sl 1024 -ls'

#echo "exec $xterm_bin $name $geometry $options $font $bg $fg $exe $amper"

NON_KDE_EXEC=exec

if kde_p
then
    case "$name" in
	*crl.dec.com|*compaq.com|*hp.com|*cpqnet.com) dtnum=2;;
	*) dtnum='';;
    esac
    if [ -z "$dtnum" ]
    then
	dtarg='--currentdesktop'
    else
	dtarg="--desktop $dtnum"
    fi
    EXEC="kstart $dtarg --activate --window ${window}"
else
    EXEC=$NON_KDE_EXEC
fi

if [ "$just_show" = "y" ]
then
    EXEC="echo $EXEC"
    amper=''
fi

vunsetp "$login_shell_p" && {
    options=$(echo "$options" | sed s/-ls//g)
}

eval echo $EXEC $xterm_bin $name $geometry $options $font $bg $fg $exe $amper
eval $EXEC $xterm_bin $name $geometry $options $font $bg $fg $exe $amper

#exec $term $geometry -fat -sl 2500 -ls -font $font -bg "#e0ffff" $exe &
