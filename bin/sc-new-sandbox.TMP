#!/bin/sh
# Make a new perforce sandbox.

progname=$(basename "$0")

source script-x
source eexec

askForConfirmation=
revision=

: ${workDir:=$HOME/work}
: ${sync_p=}
: ${DASH_N_OPT=}

# We need a shared directory if editing across machines.
# p4 help environment lists both TMP and TEMP, but I don't know which one has
# priority if both are set.
export TMP=$HOME/tmp
export TEMP=$TMP

Usage_synopsis="Make a new perforce(tm) sandbox under work dir [$workDir] 
  and optionally populate it."
Usage_args_info=" <sandbox a.k.a client-name>"

EExecVerbose
std_options=""
option_str="anvqw:sr:."
DPGOP_args_required=t
source dp-getopt+.sh || exit 1

for i in "$@"
do
  # do. e.g.  $OPTION_ARG=$2; shift;; to process options with arguments.
  case $1 in
      -a) EExecAsk=t;;
      -n) DASH_N_OPT=-n; EXEC=echo; EExecDashN;; # Don't actually execute stuff
      -v) VERBOSE="echo $progname: "; EExecVerbose;;
      -q) VERBOSE=":"; EExecQuiet;;
      -w) workDir=$2; shift;;
      -s) sync_p=t;;
      -r) revision="$2"; shift;;
#      -.) sandboxName=$(scsandbox -.);;
      -.) sandboxName=$(basename $PWD);;
      --) shift ; break ;;
      *) 
      echo 1>&2 "Unsupported option>$1<";
      Usage
      exit 1 ;;
    esac
    shift
done

: ${sandboxName:=${1-}}
shift
[ -z "$sandboxName" ] && {
    read -e -p "I need a sandbox name: " sandboxName
}

EExec cd $workDir

[ -d "$sandboxName" ] && {
    echo "sandbox \`$sandboxName' already exists."
    exit 1
} 1>&2

EExec mkdir -p $sandboxName
EExec cd $sandboxName
mk.p4client $DASH_N_OPT -c

rc=
if [ "$sync_p" == 't' ]
then
    EExec p4 sync $revision
    rc=$?
    echo 1>&2 "p4 sunk"
else
    true
fi
rc=$?
echo 1>&2 "Finished creating sandbox $sandboxName."
exit $?
