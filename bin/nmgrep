#!/bin/sh

source script-x

: ${def_arm_nm:=/home/davep/hostel/xscale/gcc-xscale/bin/arm-none-linux-gnueabi-nm}
: ${def_x86_nm:=nm}
: ${grepper:=egrep}
: ${files_with_matches_opt=}

NM=
grepper_args=
nm_args=
demangle_opt=--demangle
extern_only_opt=
grep_color_opt=--color
unset regexp

# Parse command line.
std_options=""
option_str="ax8ig:N:A:e:n:l"
long_options=("no-demangle" "demangle" "mangle"
    "extern-only" "no-extern-only"
    "grep-color" "no-grep-color"
    "files-with-matches")

source dp-getopt+.sh
while (($# > 0))
do
  case "$1" in
        -a) NM=$def_arm_nm;;
        -[x8i]) NM=$def_x86_nm;;
        -[NA]) NM=$2; shift;;
        --demangle) demangle_opt=--demangle;;
        --no-demangle|--mangle) demangle_opt=;;
        --extern-only) extern_only_opt=--extern-only;;
        --no-extern-only) extern_only_opt=;;
        --grep-color) grep_color_opt=--color;;
        --no-grep-color) grep_color_opt=;;
        -g) grepper_args="$grepper_args $2"; shift;;
        -n) nm_args="$nm_args $2"; shift;;
        -l|--files-with-matches) files_with_matches_opt=-l;;
        -e) regexp=$2; shift;;
        --) shift; break;;
        *) 
        echo 1>&2 "Unsupported option>$1<"
        Usage
        exit 1 ;;
    esac
    shift
done

: ${arm_file_glob="*ARM*"}
: ${elf_glob="*ELF*"}

guess_nm()
{
    # Assume x86 unless specified otherwise.
    local file="$1"
    local file_says=$(file "$file")
    case "$file_says" in
        $elf_glob) ;;
        $arm_file_glob) echo $def_arm_nm; return;;
    esac
    echo $def_x86_nm
}

get_nm()
{
    if vsetp "$NM"
    then
        echo "$NM"
    else
        echo $(guess_nm "$1")
    fi
}

echo "@>$@<"

: ${regexp=${1-}}                  # Set only if void.
shift
echo_id regexp
for file in "$@"; do
    $(get_nm "$file") \
        ${demangle_opt} \
        ${extern_only_opt} \
        ${nm_args} ${file} \
        | \
            ${grepper} \
              ${grep_color_opt} \
              ${grepper_args} \
              ${files_with_matches_opt} \
              --label="${file}" \
              -H \
             "${regexp}"
done
