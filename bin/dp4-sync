#!/bin/sh
source script-x
progname="$(basename $0)"
source eexec


# Use my teeker program which saves stdin into a file like tee, but simply
# ticks off chars to stdout using tikker. Makes for a lot less output but
# gives feedback that something is happening.
teekerer()
{
    EExec -y teeker $teeker_opts "$@"
}

teekerer_sample()
{
    EExec -y teeker -s -i $teeker_interval "$@"
}

teeer()
{
    EExecDashN_p && {
        set -- /dev/null
    }
    EExec -y tee "$@"
}

: ${save_args_p=t}
: ${sync_dash_n=}
tee_func=teekerer_sample
teeker_opts=
teeker_interval=100
std_options=""
option_str="nvqtsk:i:"
long_options=("teeker-opts:" "tee-func:" "teeker-interval:"
    "sync-dash-n"
    "sample" "tee" "teeker"
    "no-save-args")

source dp-getopt+.sh
for i in "$@"
do
  # do. e.g.  shift; $OPTION_ARG=$1;; to process options with arguments.
  case $1 in
      -n) EXEC=echo; EExecDashN; tee_func=teeer;; # Don't actually execute stuff
      -v) VERBOSE="echo $progname: "; EExecVerbose;;
      -q) VERBOSE=":"; EExecQuiet;;
      -t|--tee) tee_func=teeer;;
      -k|--teeker-opts) shift; teeker_opts="$1";;
      -i|--teeker-interval) shift; teeker_interval="$1";;
      --no-save-args) save_args_p=;;
      --tee-func) shift; tee_func="$1";;
      --sample) tee_func=teekerer_sample;;
      --teeker) tee_func=teekerer;;
      --sync-dash-n) sync_dash_n=-n;;
      --) shift ; break ;;
      *) 
      echo 1>&2 "Unsupported option>$1<";
      Usage
      exit 1 ;;
    esac
    shift
done

: ${kwa_log_root:=$(dp4-get-root)}
: ${kwa_log_base:=${progname}}
: ${kwa_log_dir:=${kwa_log_root}/${kwa_log_base}-$(dp-std-timestamp)}
: ${kwa_log_file:=${kwa_log_dir}/${progname}.out}
EExec -y mkdir -p "${kwa_log_dir}"
EExec -y cd "${kwa_log_root}"
EExec_verbose_msg "Sync'ing in >$(pwd)<"

echo "log dir>${kwa_log_dir}<"
{
    # print log name before and after in case it is a long sync.
    [ -n "$save_args_p" ] && {
        save_args_file="${kwa_log_dir}/dp4-sync.args"
        echo_id save_args_file
        echo "p4 sync args:
$@" >| "${save_args_file}"
    }
    EExec p4 sync $sync_dash_n "$@" 
} 2>&1 | EExec -y $tee_func "${kwa_log_file}"
{
    echo
    # Let me know if anything needs merging. -n --> just show problems.
    echo "******* Running p4 resolve -n "
    echo "*******   to show anything which may need to be resolved *******"
    echo "******* Any resolves shown here must be done by hand. *******"
    echo
    EExec p4 resolve -n
    echo
    echo "*******"
} 2>&1 | EExec -y tee -a "${kwa_log_file}"

echo "log dir>${kwa_log_dir}<"
dp4-sync-post-processor
exit
