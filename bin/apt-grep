#!/bin/sh

. script-x

prog=`basename $0`
def_grepper=egrep
grepper=$def_grepper
Usage()
{
   {
       echo "${prog}: usage: [-$all_options] [-- $grepper options] regexp
    -e --> Don't prepend default regexp prefix: [$def_regexp_prefix].
    -f<list> --> Add <list> to front of def_lists: [$def_lists].
                 Can be used >= 0 times.
    -a<list> --> Append <list> to def_lists: [$def_lists]
                 Can be used >= 0 times.
    -F --> Clear existing lists.
    -g<grepper> --> Use <grepper> instead of default: [$def_grepper].
"
   } 1>&2
   
   exit 1
}

absify()
{
    local dir=$1; shift
    #echo 1>&2 "@>$@<"
    for l in "$@"
      do
      #echo_id 1>&2 l
      case "$l" in
          /*) echo "$l";;
          *) echo "${dir}/$l";;
      esac
    done
}

: ${deb_pkg_dir:=/var/lib/apt/lists}
# Crappy default...
builtin_def_lists="${deb_pkg_dir}/debmirror.vanu.com_debian_dists_etch_main_binary-i386_Packages"
def_lists=$(host-info.py -n "$builtin_def_lists" deb-packages)
lists="$def_lists"

grepper_dash_n=
def_regexp_prefix="^Package: "
regexp_prefix=$def_regexp_prefix
std_options=""
option_str="ef:Fa:g:n"
all_options="$option_str$std_options"

[[ $# == 0 ]] && Usage

# New style getopt... fixes ugly quoting problems.
q=$(getopt -o "$all_options" -- "$@")
[ $? != 0 ] && Usage
eval set -- "$q" 
unset q
for i in "$@"
do
  # do. e.g.  $OPTION_ARG=$2; shift;; to process options with arguments.
  case $1 in
      -e) regexp_prefix="";;
      -f) lists="$2 $lists"; shift;;
      -a) lists="$lists $2"; shift;;
      -F) lists="";;
      -g) grepper=$2; shift;;
      -n) grepper_dash_n="-n";;
      --) shift ; break ;;
      *) 
      echo 1>&2 "Unsupported option>$1<";
      Usage
      exit 1 ;;
    esac
    shift
done

if ! type "$grepper" >/dev/null 2>&1; then
    echo 1>&2 "grepper \`$grepper' cannot be found."
    exit 1
fi
last_arg=$(eval echo \$$#)
prev=""
args=""
#echo "$0: @>$@<"
for x in "$@"; do
    args="$args $prev"
    prev="$x"
done
args="$args"                    # HUH!?
regexp="$regexp_prefix$last_arg"

abs_lists=$(absify ${deb_pkg_dir} ${lists})

$grepper $grepper_dash_n $args "$regexp" $abs_lists /dev/null
