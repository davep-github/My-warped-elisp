#!/bin/bash
########################################################################
#
# template begin.

source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
EExec_verbose_msg $(echo_id eexec_program)
unset eexec_program
#export eexec_program
# Or export eexec_program to propagate eexec info to a called program.
# export eexec_program

trap_exit_msg=

# Useful traps
on_exit()
{
    local rc="$?"
    local signum="${1-}"; shift

    echo "on_exit: rc: $rc; ${trap_exit_msg}"
}
# trap 'on_exit' 0

on_error()
{
    local rc="${1-}"; shift

    echo "on_exit: rc: $rc; ${trap_exit_msg}"
    trap '' 0
}
# trap 'on_error' ERR

sig_exit ()
{
    {
        local sig_num=$1; shift
        echo
        echo "sig_exit, sig_num: $sig_num"
        exit 1
    } 1>&2
}

# for sig in 2 3 4 5 6 7 8 15
# do
#     trap "sig_exit $sig" $sig
# done

display_stderr()
{
    echo 1>&2 "$progname: $@"
}

status_msg()
{
    display_stderr "$@"
}

fatal_error()
{
    local error="${1}"
    shift
    display_stderr "$@"
    exit "${error}"
}

Usage_error()
{
    fatal_error 1 "$@"
}

#
# template end.
########################################################################

: ${PGREP_REGEXP:=}
: ${raise_p=}

while (($# > 0))
do
  case "${1}" in
      -r|--raise) raise_p=t;;
      -n|--name) shift; win_name="${1}";;
      --) shift; break;;
      *) break;;
  esac
  shift
done

prog="$1"
shift
pname=$(basename "${prog}")

: ${win_name:=$pname}

default_progname()
{
    # Fucking non-greedy never does what I want it to.
    # I really want it to stop as early as possible, leaving the ./- in \2
    # I'm sure it's me.
    echo $(basename $prog) | sed -rn 's/(.*?)([.-]?iff)/\1/p'
}

run_iff_fun()
{
    # Run prog if we fail to find it.
    if [ -n "${PGREP_REGEXP}" ]; then
        # 0 --> fail, n --> num matches 
        NO_HDR=t EExec -y pgrep $DP_SCRIPT_X_DEBUG_OPT "${PGREP_REGEXP}" \
                 | fgrep -vq "$0" &&  exit 1
        true
    else
        # findprog returns success if it finds anything.
        findprog -q "${pname}" >/dev/null 2>&1 && {
            [ -n "${raise_p}" ] && {
                wmctrl -a "${win_name}"
            }
            exit 0
        }
        true
    fi && (EExec xit "$prog" "$@" &)
}
run_iff_fun "$@"
exit 1
