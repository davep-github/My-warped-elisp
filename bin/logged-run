#!/bin/sh

source script-x
set -u
progname="$(basename $0)"
source eexec
if vsetp "${eexec_program-}"    # Did the caller provide a program?
then
    EEXEC_SHIFT=:
else
    eexec_program=$(EExec_parse "$@")
    EEXEC_SHIFT=shift
fi

for op in $eexec_program
do
  $op
  ${EEXEC_SHIFT}
done
EExec_verbose_msg $(echo_id eexec_program)
unset eexec_program
# Or export eexec_program to propagate eexec info to a called program.
# export eexec_program

: ${prefix=${progname}-}
: ${suffix=.out}
: ${output_handler=teeker_handler}
: ${teeker_options=--slog --ts --hg -i100 --cflush-every=-1}
: ${compression_level=9}
: ${teeker_gzip_option=-Z${compression_level}}
: ${gzip_p=t}
: ${def_gzip_suffix=".gz"}
: ${gzip_suffix=${def_gzip_suffix}}
: ${yopp_p=t}
: ${zipper=gzip}

teeker_handler()
{
    teeker_options=(${teeker_gzip_option} ${teeker_options})

    EExec teeker "${teeker_options[@]}" "$@"
}

cat_handler()
{
    cat
}

# Usage variable usage:
Usage_args_info="logged-run [logged-run-options... --] command-to-run [command-options]"
Usage_synopsis="Display various info about errno...:
"
# Using ) after the args makes copy & paste between here and the
# case statement easier.
Usage_details="${EExec_parse_usage}
-p|--prefix) <prefix> of log file name [$prefix].
-s|--suffix) <suffix> of log file name [$suffix].
-c|--no-compress) Don't compress the log file [DO compress].
--cat) Simply cat(1) output.
"

# Example of arg parsing.
option_str="${EExec_parse_option_str}p:s:cz:"
long_options=(
    "prefix:"
    "suffix:"
    "no-compress"
    "cat"
)
source dp-getopt+.sh
while (($# > 0))
do
  # do. e.g.  shift; $OPTION_ARG=$1;; # to process options with arguments.
  case $1 in
      # eexec support
      # Done by EExec_parse and friends.

      # Program options.
      -p|--prefix) shift; prefix="${1}";;
      -s|--suffix) shift; suffix="${1}";;
      -c|--no-compress) 
          gzip_p=
          gzip_suffix=
          teeker_gzip_option=
          zipper=cat
          compression_level=
          ;;
      -z|--compress-level|--compression-level)
         gzip_p=t
         gzip_suffix="${def_gzip_suffix}"
         shift; compression_level="${1}"
         teeker_gzip_option="-Z${compression_level}"
         zipper=cat
         ;;
      --cat) output_handler=cat_handler;;
      # Help!
      --help) Usage; exit 0;;
      --) shift ; break ;;
      *) echo 1>&2 "Unsupported option>$1<"
         exit 1;;
    esac
    shift
done

log_file="${prefix}$(dp-std-timestamp)${suffix}${gzip_suffix}"

EExec "$@" 2>&1 | "${output_handler}" "${log_file}"
