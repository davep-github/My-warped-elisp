#!/bin/sh
# $Id: namify-path,v 1.5 2005/02/28 08:11:13 davep Exp $
#
# Convert a pathname to a filename by substituting / chars with
#  another char, which defaults to '.'
#set -x
. script-x
char="."
no_leading_char=""
: ${clean_up_str="/"}

Usage()
{
    echo "Usage: $(basename $0) {-[nlh]} {-[cds] <new-char>} <path-name>
Replace / characters in <path-name> with <new-char> or '.'
-h --> Show this message and exit.
-n --> Nuke a leading / (actually its replacement) from the result.
-l --> Leave a leading /'s replacement.
-[cds] <char> --> The char which will replace the /.
--spaces --> Clean up spaces, too."

    exit "$1"
}

Error()
{
    [ -z "$@" ] && set -- 1
    Usage "$@" 1>&2
}

option_str="nlhc:d:s:/"
long_options=(
    "spaces" 
    "clean-char:" "acc:"
)
source dp-getopt+.sh || {
    dp_exit 1 "getopt failed"
}

[ $? != 0 ] && Error 1

while (($# > 0))
do
    case $1 in
	-n|'-/') no_leading_char=t ;;
	-l) no_leading_char= ;;
        -h) Usage 0;;           # This is a request
	-c|-d|-s) char=$2; shift;;
        --add-clean-char|--acc) shift; clean_up_str="${clean_up_str}${1}";;
        --spaces) clean_up_str="${clean_up_str} ";;
	--) shift; break ;;
	*) exit 1 ;;
    esac
    shift
done

path=$1
path=$(echo $path | sed 's!//*$!/!')
base=$(echo $path | sed "s![${clean_up_str}]!$char!g")

if [ "$no_leading_char" != "t" ]
then
    echo $base
else
    echo $base | sed "s!^\\$char!!"
fi

